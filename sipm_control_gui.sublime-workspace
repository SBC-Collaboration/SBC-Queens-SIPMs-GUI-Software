{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"tagret",
				"target_compile_features"
			],
			[
				"AR",
				"ARMADILLO_LIBRARIES"
			],
			[
				"_po",
				"_port_mutex"
			],
			[
				"try",
				"try_enqueue"
			],
			[
				"queu",
				"queue_type"
			],
			[
				"queue",
				"queue_type"
			],
			[
				"read",
				"readerwriterqueue.h>"
			],
			[
				"CAENIn",
				"CAENInterfaceData"
			],
			[
				"get_tim",
				"get_current_time_epoch"
			],
			[
				"PLot",
				"PlotStyle"
			],
			[
				"TEe",
				"TeensyControllerInterface.hpp\""
			],
			[
				"n",
				"n_elem"
			],
			[
				"init",
				"init_done"
			],
			[
				"R",
				"ResetAll"
			],
			[
				"INdi",
				"IndicatorNames"
			],
			[
				"IN",
				"InitGainCalculation"
			],
			[
				"In",
				"InitGainCalculation"
			],
			[
				"Indi",
				"IndicatorNames"
			],
			[
				"proce",
				"processing_evts"
			],
			[
				"Save",
				"SaveFileInfo"
			],
			[
				"Run",
				"RunName"
			],
			[
				"uin",
				"uint32_t"
			],
			[
				"C",
				"GroupConfigs"
			],
			[
				"uniqu",
				"unique_ptr"
			],
			[
				"Si",
				"SiPMVoltageSysSupplyEN"
			],
			[
				"osc",
				"osc_event"
			],
			[
				"caen",
				"caen_event_to_armadillo"
			],
			[
				"uint",
				"uint32_t"
			],
			[
				"Peltier",
				"PeltierState"
			],
			[
				"SetRe",
				"SetPeltierRelay"
			],
			[
				"rea",
				"release"
			],
			[
				"val",
				"value_or"
			],
			[
				"ItemHo",
				"IsItemHovered"
			],
			[
				"PS",
				"PSVoltage"
			],
			[
				"send_",
				"send_kei2000"
			],
			[
				"send_ke",
				"send_kei6487"
			],
			[
				"Keith",
				"Keithley2000Measure"
			],
			[
				"SetupAx",
				"SetupAxisFormat"
			],
			[
				"value",
				"value_or"
			],
			[
				"re",
				"reserve"
			],
			[
				"_",
				"_voltagesFile"
			],
			[
				"Ver",
				"VSliderFloat"
			],
			[
				"siz",
				"size_t"
			],
			[
				"Ot",
				"OtherInQueue"
			],
			[
				"Other",
				"OtherInQueue"
			],
			[
				"PFE",
				"PFEIFFERSSGState"
			],
			[
				"SetRT",
				"SetRTDMask"
			],
			[
				"RTD",
				"RTDMask"
			],
			[
				"GET",
				"GetRawRTDs"
			],
			[
				"state",
				"state_of_everything"
			],
			[
				"t",
				"t_conf"
			],
			[
				"valu",
				"value_or"
			],
			[
				"int",
				"inttypes.h>"
			],
			[
				"en",
				"cend"
			],
			[
				"PI",
				"PIDTempTripPoint"
			],
			[
				"Set",
				"SetPPIDTripPoint"
			],
			[
				"Te",
				"TeensyCommands"
			],
			[
				"IsI",
				"IsItemDeactivated"
			],
			[
				"c",
				"c_Nhit_second_cut"
			],
			[
				"photon",
				"photon_hits_tree"
			],
			[
				"nhi",
				"nhit_prime"
			],
			[
				"total",
				"totalbiny"
			],
			[
				"G4",
				"G4cout"
			],
			[
				"pa",
				"particleType"
			],
			[
				"Cr",
				"CreateNtupleIColumn"
			],
			[
				"_hi",
				"_histo_depth"
			],
			[
				"_min",
				"_min_val"
			],
			[
				"log",
				"logEnergy"
			],
			[
				"_max",
				"_max_val"
			],
			[
				"_his",
				"_histo_depth"
			],
			[
				"_hiso",
				"_histo_length"
			],
			[
				"his",
				"_histo_depth"
			],
			[
				"_histo",
				"_histo_length"
			],
			[
				"ene",
				"energyParticle"
			],
			[
				"_ci",
				"_circle_orientation"
			],
			[
				"verbo",
				"_verbosity"
			],
			[
				"temp",
				"temp0C_mod"
			],
			[
				"time",
				"time0C"
			],
			[
				"_get",
				"_get_reflectivity"
			],
			[
				"tyve",
				"tyvek_energies"
			],
			[
				"df",
				"df2000ma_wave"
			],
			[
				"mini",
				"miniclean_reflectivies"
			],
			[
				"min",
				"miniclean_energies"
			],
			[
				"pmt",
				"pmtsEff"
			],
			[
				"_ref",
				"_reflectroCover"
			],
			[
				"_refl",
				"_reflectorMaterial"
			],
			[
				"Stee",
				"SteelOP"
			],
			[
				"stee",
				"steel_properties"
			],
			[
				"DF",
				"DF2000MA_pt"
			],
			[
				"DF2",
				"DF2000MAReflector"
			],
			[
				"diele",
				"dielectric_metal"
			],
			[
				"off",
				"offsetX"
			],
			[
				"of",
				"offsetY"
			],
			[
				"out",
				"out_data"
			],
			[
				"G4OpBounds",
				"G4OpBoundaryProcess"
			],
			[
				"h",
				"hfile"
			],
			[
				"tyvek",
				"tyvek_pt"
			],
			[
				"inc",
				"INCHES_TO_CM"
			],
			[
				"_moteh",
				"_motherPhys"
			],
			[
				"_world",
				"_worldPhys"
			],
			[
				"_main",
				"_mainPhys"
			],
			[
				"_da",
				"_daughter"
			],
			[
				"_mother",
				"_motherConstruction"
			],
			[
				"water",
				"water_tank_log-"
			],
			[
				"pico_ER",
				"PICO_reflector_log"
			],
			[
				"Diff",
				"DiffuseReflector"
			],
			[
				"reflec",
				"reflector_energies"
			],
			[
				"Add",
				"AddProperty"
			],
			[
				"wate",
				"water_energies"
			],
			[
				"PVC",
				"PVCOP"
			],
			[
				"string",
				"string\tstandard header"
			],
			[
				"vector",
				"vector\tstandard header"
			],
			[
				"eneg",
				"energies"
			],
			[
				"Find",
				"FindOrBuildMaterial"
			],
			[
				"trans",
				"transform"
			],
			[
				"anal",
				"analysisManager"
			],
			[
				"PMT",
				"PMTDISTRIBUTION"
			],
			[
				"G4Tr",
				"G4Transform3D"
			],
			[
				"tran",
				"transMatrix"
			],
			[
				"radi",
				"radiusCylinder"
			],
			[
				"top_ta",
				"top_tank_height"
			],
			[
				"water_t",
				"water_tank_phys"
			],
			[
				"pico",
				"pico_tubes_log"
			],
			[
				"DEAP_",
				"DEAP_water_tank_log"
			],
			[
				"con",
				"contact_phys"
			],
			[
				"SetVis",
				"SetVisAttributes"
			],
			[
				"flo",
				"floor_box"
			],
			[
				"STPo",
				"STPosZ"
			]
		]
	},
	"buffers":
	[
		{
			"file": "gui_setup.toml",
			"settings":
			{
				"buffer_size": 1699,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"left_delete",
					null,
					"AQAAABEAAAAAAAAAEQAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAEgAAAAAAAAASAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "hh"
					},
					"AgAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"left_delete",
					null,
					"AQAAABIAAAAAAAAAEgAAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "dd"
					},
					"AgAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgAAAAAAAAASAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAABEAAAAAAAAAEgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "S"
					},
					"AgAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAXAAAAAAAAAAQAAABSVU5T",
					"AQAAAAAAAAABAAAAFgAAAAAAAAAaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "BC-Queens"
					},
					"CQAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAACAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwAAAAAAAAAXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "-R"
					},
					"AgAAACAAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAiAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"left_delete",
					null,
					"AQAAACEAAAAAAAAAIQAAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "SiPMS"
					},
					"BQAAACEAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAmAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAACUAAAAAAAAAJQAAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "s-RUN"
					},
					"BQAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQAAAAAAAAAlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					2,
					"left_delete",
					null,
					"AgAAACkAAAAAAAAAKQAAAAAAAAABAAAATigAAAAAAAAAKAAAAAAAAAABAAAAVQ",
					"AQAAAAAAAAABAAAAKgAAAAAAAAAqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "uns"
					},
					"AwAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAAAAAAAAAAoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "false"
					},
					"BgAAAHYGAAAAAAAAdwYAAAAAAAAAAAAAdwYAAAAAAAB3BgAAAAAAAAQAAAB0cnVldwYAAAAAAAB4BgAAAAAAAAAAAAB4BgAAAAAAAHkGAAAAAAAAAAAAAHkGAAAAAAAAegYAAAAAAAAAAAAAegYAAAAAAAB7BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgYAAAAAAAB6BgAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACjBgAAW0ZpbGVdClJ1bkRpciA9ICIvaGRkL1NCQy1RdWVlbnMtU2lQTXMtUnVucyIKUnVuTmFtZSA9ICJURVNUSU5HIgoKW1RlZW5zeV0KUG9ydCA9ICIvZGV2L3R0eUFDTTAiCgojIElmIHRydWUsIHRoZSBUZWVuc3kgaXMgaW4gUlREIG9ubHkgbW9kZS4KIyBjYW5ub3QgYmUgY2hhbmdlZCBkdXJpbmcgR1VJClJURE1vZGUgPSB0cnVlCiMgUlREIHNhbXBsaW5nIHBlcmlvZCBpbiBtcwpSVERTYW1wbGluZ1BlcmlvZCA9IDEwMDAKIyBJZiBiaXQgbiBpcyBzZXQsIGl0IGVuYWJsZWQgdGhlIFJURCBhdCBwb3NpdGlvbiAoaSwgaykKIyB3aGVyZSBpIGlzIHRoZSBib2FyZCBhbmQgayBpcyB0aGUgUlRECiMgRGVwZW5kcyBvbiBob3cgbWFueSBib2FyZHMgYW5kIFJURHMgYXJlIGluIGVhY2ggYm9hcmQuClJURE1hc2sgPSAweEZGRkYKUlRETmFtZXMgPSBbIlNpUE0gMSIsICJTaVBNIDIiLCAiV2F0ZXIgQmxvY2siXQoKUElERW5hYmxlID0gZmFsc2UKUGVsdGllclRlbXBTZXRwb2ludCA9IC0xNQoKUGVsdGllclRLcCA9IC01MDAKUGVsdGllclRUaSA9IDEwMDAwMDAuMApQZWx0aWVyVFRkID0gMC4wCgpbQ0FFTl0KIyBEVDU3MzBCIG9yIERUNTc0MEQKTW9kZWwgPSAiRFQ1NzMwQiIKUG9ydCA9IDIzNDczCiMgVVNCIGlmIHVzaW5nIGEgZGlyZWN0IFVTQiBjb25uZWN0aW9uCiMgQTQ4MTggZm9yIHRoZSBVU0IgMy4wIHRvIENPTkVUIGFkYXB0ZXIKQ29ubmVjdGlvblR5cGUgPSAiQTQ4MTgiCiMgaWYgYXBwbGljYWJsZQpWTUVBZGRyZXNzID0gMAojIDAgPSBub3QgYWxsb3dlZApSZWNvcmRMZW5ndGggPSA1MDAwCk1heEV2ZW50c1BlclJlYWQgPSA1MDAKUG9zdEJ1ZmZlclBvcmNlbnRhZ2UgPSA5MApPdmVybGFwcGluZ1JlamVjdGlvbiA9IGZhbHNlClRSR0lOYXNHYXRlID0gZmFsc2UKIyAwID0gZGlzYWJsZWQsIDEgPSBBQ1Egb25seSwgMiA9IGV4dCBtb2RlIG9ubHksIDMgPSBib3RoCkV4dGVybmFsVHJpZ2dlciA9IDAKU29mdHdhcmVUcmlnZ2VyID0gMQojIDAgPSByaXNpbmcgZWRnZSwgMSA9IGZhbGxpbmcgZWRnZQpQb2xhcml0eSA9IDEKIyAwID0gTklNLCAxID0gVFRMCklPTGV2ZWwgPSAwCgojIEluZGl2aWR1YWwgQ2hhbm5lbCBzZXR0aW5ncwojIFRoZSBudW1iZXIgYWZ0ZXIgZ3JvdXAgcmVwcmVzZW50cwojIHRoZSAjIG9mIHRoZSBncm91cCAob3IgY2hhbm5lbCkKW0NBRU4uZ3JvdXAwXQpFbmFibGVkID0gMQojIFRyaWdnZXIgRW5hYmxlIE1hc2sKVHJnTWFzayA9IDcKIyBBY3F1aXNpdGlvbiBFbmFibGUgTWFzawpBY3FNYXNrID0gNwojIEdyb3VwIG9mZnNldApPZmZzZXQgPSAweDgwMDAKIyBJbmRpdmlkdWFsIGNvcnJlY3Rpb25zIHRvIG9mZnNldApDb3JyZWN0aW9ucyA9IFs1LCAwLCA2LCAwLCAwLCAwLCAwLCAwXQoKUmFuZ2UgPSAxClRocmVzaG9sZCA9IDc4MDAKCiMgW0NBRU4uZ3JvdXAxXQojIEVuYWJsZWQgPSAwCiMgT2Zmc2V0ID0gMHg4MDAwCiMgQ29ycmVjdGlvbnMgPSBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0KIyBSYW5nZSA9IDEKIyBUaHJlc2hvbGQgPSAyMDc1CgpbT3RoZXJdCltPdGhlci5TaVBNVm9sdGFnZVN5c3RlbV0KUG9ydCA9ICIvZGV2L3R0eVVTQjAiCkluaXRWb2x0YWdlID0gNTIuNQoKW090aGVyLlBGRUlGRkVSU2luZ2xlR2F1Z2VdClBvcnQgPSAiQ09NNyIKRW5hYmxlZCA9IGZhbHNlCiMgMCA9IDEwMG1zLCAxID0gMXMsIDIgPSAxbWluClJhdGUgPSAxCgAAAAAAAAAAowYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewYAAAAAAAB7BgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "include/sbcqueens-gui/hardware_helpers/CAENDigitizerInterface.hpp",
			"settings":
			{
				"buffer_size": 44358,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					432,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"EQAAAPAnAAAAAAAA8ycAAAAAAAAAAAAAoScAAAAAAACkJwAAAAAAAAAAAABvJwAAAAAAAHInAAAAAAAAAAAAAEAnAAAAAAAAQycAAAAAAAAAAAAAEScAAAAAAAAUJwAAAAAAAAAAAADhJgAAAAAAAOQmAAAAAAAAAAAAALMmAAAAAAAAtiYAAAAAAAAAAAAAZSYAAAAAAABoJgAAAAAAAAAAAAA0JgAAAAAAADcmAAAAAAAAAAAAAAQmAAAAAAAAByYAAAAAAAAAAAAA1CUAAAAAAADXJQAAAAAAAAAAAACjJQAAAAAAAKYlAAAAAAAAAAAAAG0lAAAAAAAAcCUAAAAAAAAAAAAARSUAAAAAAABIJQAAAAAAAAAAAAD2JAAAAAAAAPkkAAAAAAAAAAAAAMQkAAAAAAAAxyQAAAAAAAAAAAAAlSQAAAAAAACYJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABygAAAAAAACFJAAAAAAAAAAAAAAAAPC/"
				],
				[
					438,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AgAAACAoAAAAAAAAICgAAAAAAAADAAAALy8gzicAAAAAAADOJwAAAAAAAAMAAAAvLyA",
					"AQAAAAAAAAABAAAAOigAAAAAAAC+JwAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAFgiAAAAAAAAWyIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbiIAAAAAAABuIgAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAADcgAAAAAAAAOiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATSAAAAAAAABNIAAAAAAAAAAAAAAAAPC/"
				],
				[
					484,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CQAAAESZAAAAAAAARZkAAAAAAAAAAAAARZkAAAAAAABZmQAAAAAAAAAAAABZmQAAAAAAAF2ZAAAAAAAAAAAAAF2ZAAAAAAAAXpkAAAAAAAAAAAAAXpkAAAAAAAB2mQAAAAAAAAAAAABFmQAAAAAAAEWZAAAAAAAAGAAAACAgICAgICAgICAgICAgICAgICAgICAgIF6ZAAAAAAAAX5kAAAAAAAAAAAAAX5kAAAAAAAB3mQAAAAAAAAAAAABGmQAAAAAAAEaZAAAAAAAAGAAAACAgICAgICAgICAgICAgICAgICAgICAgIA",
					"AQAAAAAAAAABAAAARJkAAAAAAABEmQAAAAAAAAAAAAAAAPC/"
				],
				[
					486,
					1,
					"reindent",
					null,
					"AQAAAEaZAAAAAAAAXpkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARpkAAAAAAABGmQAAAAAAAAAAAAAAAGhA"
				],
				[
					487,
					1,
					"left_delete",
					null,
					"AgAAAFqZAAAAAAAAWpkAAAAAAAAEAAAAICAgIFuZAAAAAAAAW5kAAAAAAAAYAAAAICAgICAgICAgICAgICAgICAgICAgICAg",
					"AQAAAAAAAAABAAAAXpkAAAAAAABemQAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAFqZAAAAAAAAW5kAAAAAAAAAAAAAW5kAAAAAAABcmQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWpkAAAAAAABamQAAAAAAAAAAAAAAAPC/"
				],
				[
					489,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFyZAAAAAAAAXZkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXJkAAAAAAABcmQAAAAAAAAAAAAAAAPC/"
				],
				[
					490,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAF2ZAAAAAAAAX5kAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXZkAAAAAAABdmQAAAAAAAAAAAAAAAPC/"
				],
				[
					491,
					1,
					"insert",
					{
						"characters": " !"
					},
					"AgAAAF6ZAAAAAAAAX5kAAAAAAAAAAAAAX5kAAAAAAABgmQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXpkAAAAAAABemQAAAAAAAAAAAAAAAPC/"
				],
				[
					492,
					2,
					"left_delete",
					null,
					"AgAAAF+ZAAAAAAAAX5kAAAAAAAABAAAAIV6ZAAAAAAAAXpkAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAYJkAAAAAAABgmQAAAAAAAAAAAAAAAPC/"
				],
				[
					493,
					1,
					"insert",
					{
						"characters": "!port"
					},
					"BQAAAF6ZAAAAAAAAX5kAAAAAAAAAAAAAX5kAAAAAAABgmQAAAAAAAAAAAABgmQAAAAAAAGGZAAAAAAAAAAAAAGGZAAAAAAAAYpkAAAAAAAAAAAAAYpkAAAAAAABjmQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXpkAAAAAAABemQAAAAAAAAAAAAAAAPC/"
				],
				[
					495,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGSZAAAAAAAAZZkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZJkAAAAAAABkmQAAAAAAAAAAAAAAAPC/"
				],
				[
					496,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGWZAAAAAAAAZ5kAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZZkAAAAAAABlmQAAAAAAAAAAAAAAAPC/"
				],
				[
					497,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAGaZAAAAAAAAZ5kAAAAAAAAAAAAAZ5kAAAAAAAB7mQAAAAAAAAAAAAB7mQAAAAAAAHyZAAAAAAAAAAAAAHyZAAAAAAAAkJkAAAAAAAAAAAAAZ5kAAAAAAABnmQAAAAAAABQAAAAgICAgICAgICAgICAgICAgICAgIGeZAAAAAAAAf5kAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZpkAAAAAAABmmQAAAAAAAAAAAAAAAPC/"
				],
				[
					498,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAH+ZAAAAAAAAgJkAAAAAAAAAAAAAgJkAAAAAAACBmQAAAAAAAAAAAACBmQAAAAAAAIKZAAAAAAAAAAAAAIKZAAAAAAAAg5kAAAAAAAAAAAAAg5kAAAAAAACEmQAAAAAAAAAAAACEmQAAAAAAAIWZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAf5kAAAAAAAB/mQAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIWZAAAAAAAAhpkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhZkAAAAAAACFmQAAAAAAAAAAAAAAAPC/"
				],
				[
					500,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIaZAAAAAAAAiJkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhpkAAAAAAACGmQAAAAAAAAAAAAAAAPC/"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAIeZAAAAAAAAiJkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAh5kAAAAAAACHmQAAAAAAAAAAAAAAAPC/"
				],
				[
					502,
					1,
					"left_delete",
					null,
					"AQAAAIeZAAAAAAAAh5kAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAiJkAAAAAAACImQAAAAAAAAAAAAAAAPC/"
				],
				[
					504,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIiZAAAAAAAAiZkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiJkAAAAAAACImQAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					3,
					"left_delete",
					null,
					"AwAAAEaZAAAAAAAARpkAAAAAAABZAAAAICAgICAgICAgICAgICAgICAgICBpZiAoIXBvcnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHt9OwogICAgICAgICAgICAgICAgICAgIH1FmQAAAAAAAEWZAAAAAAAAAQAAAApEmQAAAAAAAESZAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAn5kAAAAAAABGmQAAAAAAAAAAAAAAAPC/"
				],
				[
					545,
					1,
					"insert",
					{
						"characters": "get"
					},
					"BAAAANmYAAAAAAAA2pgAAAAAAAAAAAAA2pgAAAAAAADamAAAAAAAAAkAAABhc3luY19nZXTamAAAAAAAANuYAAAAAAAAAAAAANuYAAAAAAAA3JgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2ZgAAAAAAADimAAAAAAAAAAAAAAAAPC/"
				],
				[
					555,
					1,
					"insert",
					{
						"characters": "ay"
					},
					"AwAAANmYAAAAAAAA2pgAAAAAAAAAAAAA2pgAAAAAAADamAAAAAAAAAMAAABnZXTamAAAAAAAANuYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2ZgAAAAAAADcmAAAAAAAAAAAAAAAAPC/"
				],
				[
					556,
					1,
					"left_delete",
					null,
					"AQAAANqYAAAAAAAA2pgAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAA25gAAAAAAADbmAAAAAAAAAAAAAAAAPC/"
				],
				[
					559,
					1,
					"insert",
					{
						"characters": "sync_get"
					},
					"CAAAANqYAAAAAAAA25gAAAAAAAAAAAAA25gAAAAAAADcmAAAAAAAAAAAAADcmAAAAAAAAN2YAAAAAAAAAAAAAN2YAAAAAAAA3pgAAAAAAAAAAAAA3pgAAAAAAADfmAAAAAAAAAAAAADfmAAAAAAAAOCYAAAAAAAAAAAAAOCYAAAAAAAA4ZgAAAAAAAAAAAAA4ZgAAAAAAADimAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2pgAAAAAAADamAAAAAAAAAAAAAAAAPC/"
				],
				[
					583,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"IAAAAAqfAAAAAAAADZ8AAAAAAAAAAAAA2Z4AAAAAAADcngAAAAAAAAAAAACsngAAAAAAAK+eAAAAAAAAAAAAAIeeAAAAAAAAip4AAAAAAAAAAAAAW54AAAAAAABengAAAAAAAAAAAABEngAAAAAAAEeeAAAAAAAAAAAAACGeAAAAAAAAJJ4AAAAAAAAAAAAAAJ4AAAAAAAADngAAAAAAAAAAAADTnQAAAAAAANadAAAAAAAAAAAAAJadAAAAAAAAmZ0AAAAAAAAAAAAAZJ0AAAAAAABnnQAAAAAAAAAAAAA2nQAAAAAAADmdAAAAAAAAAAAAAAadAAAAAAAACZ0AAAAAAAAAAAAAzZwAAAAAAADQnAAAAAAAAAAAAACbnAAAAAAAAJ6cAAAAAAAAAAAAAFacAAAAAAAAWZwAAAAAAAAAAAAAP5wAAAAAAABCnAAAAAAAAAAAAAAcnAAAAAAAAB+cAAAAAAAAAAAAAPubAAAAAAAA/psAAAAAAAAAAAAAvpsAAAAAAADBmwAAAAAAAAAAAACMmwAAAAAAAI+bAAAAAAAAAAAAAF6bAAAAAAAAYZsAAAAAAAAAAAAALpsAAAAAAAAxmwAAAAAAAAAAAAD2mgAAAAAAAPmaAAAAAAAAAAAAAMSaAAAAAAAAx5oAAAAAAAAAAAAArJoAAAAAAACvmgAAAAAAAAAAAACSmgAAAAAAAJWaAAAAAAAAAAAAAFaaAAAAAAAAWZoAAAAAAAAAAAAAIZoAAAAAAAAkmgAAAAAAAAAAAADqmQAAAAAAAO2ZAAAAAAAAAAAAAJmZAAAAAAAAnJkAAAAAAAAAAAAAWpkAAAAAAABdmQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWpkAAAAAAAApnwAAAAAAAAAAAAAAAPC/"
				],
				[
					585,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CgAAAImfAAAAAAAAip8AAAAAAAAAAAAAip8AAAAAAACenwAAAAAAAAAAAACKnwAAAAAAAIqfAAAAAAAAFAAAACAgICAgICAgICAgICAgICAgICAgip8AAAAAAACinwAAAAAAAAAAAACinwAAAAAAAKOfAAAAAAAAAAAAAKOfAAAAAAAApJ8AAAAAAAAAAAAApJ8AAAAAAAClnwAAAAAAAAAAAAClnwAAAAAAAKafAAAAAAAAAAAAAKafAAAAAAAAp58AAAAAAAAAAAAAp58AAAAAAAConwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiZ8AAAAAAACJnwAAAAAAAAAAAAAAAPC/"
				],
				[
					586,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKifAAAAAAAAqZ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqJ8AAAAAAAConwAAAAAAAAAAAAAAAPC/"
				],
				[
					587,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKmfAAAAAAAAq58AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqZ8AAAAAAACpnwAAAAAAAAAAAAAAAPC/"
				],
				[
					589,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKufAAAAAAAArJ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAq58AAAAAAACrnwAAAAAAAAAAAAAAAPC/"
				],
				[
					599,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAM4aAAAAAAAAzxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzhoAAAAAAADOGgAAAAAAAAAAAAAAAPC/"
				],
				[
					600,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM8aAAAAAAAA0BoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzxoAAAAAAADPGgAAAAAAAAAAAAAAAPC/"
				],
				[
					601,
					1,
					"insert",
					{
						"characters": "port_name"
					},
					"CQAAANAaAAAAAAAA0RoAAAAAAAAAAAAA0RoAAAAAAADSGgAAAAAAAAAAAADSGgAAAAAAANMaAAAAAAAAAAAAANMaAAAAAAAA1BoAAAAAAAAAAAAA1BoAAAAAAADVGgAAAAAAAAAAAADVGgAAAAAAANYaAAAAAAAAAAAAANYaAAAAAAAA1xoAAAAAAAAAAAAA1xoAAAAAAADYGgAAAAAAAAAAAADYGgAAAAAAANkaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0BoAAAAAAADQGgAAAAAAAAAAAAAAAPC/"
				],
				[
					602,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANkaAAAAAAAA2hoAAAAAAAAAAAAA2hoAAAAAAADbGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2RoAAAAAAADZGgAAAAAAAAAAAAAAAPC/"
				],
				[
					603,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsaAAAAAAAA3BoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2xoAAAAAAADbGgAAAAAAAAAAAAAAAPC/"
				],
				[
					609,
					1,
					"paste",
					null,
					"AQAAANwaAAAAAAAA8xoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3BoAAAAAAADcGgAAAAAAAAAAAAAAAPC/"
				],
				[
					613,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPQaAAAAAAAA9RoAAAAAAAAAAAAA9RoAAAAAAAABGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BoAAAAAAAD0GgAAAAAAAAAAAAAAAPC/"
				],
				[
					624,
					1,
					"paste",
					null,
					"AgAAACwdAAAAAAAANR0AAAAAAAAAAAAANR0AAAAAAAA1HQAAAAAAABcAAABfZG9lLlNpUE1Wb2x0YWdlU3lzUG9ydA",
					"AQAAAAAAAAABAAAAQx0AAAAAAAAsHQAAAAAAAAAAAAAAAPC/"
				],
				[
					635,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPMaAAAAAAAA9BoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8xoAAAAAAADzGgAAAAAAAAAAAAAAAPC/"
				],
				[
					636,
					1,
					"insert",
					{
						"characters": " volt"
					},
					"BQAAAPQaAAAAAAAA9RoAAAAAAAAAAAAA9RoAAAAAAAD2GgAAAAAAAAAAAAD2GgAAAAAAAPcaAAAAAAAAAAAAAPcaAAAAAAAA+BoAAAAAAAAAAAAA+BoAAAAAAAD5GgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BoAAAAAAAD0GgAAAAAAAAAAAAAAAPC/"
				],
				[
					637,
					4,
					"left_delete",
					null,
					"BAAAAPgaAAAAAAAA+BoAAAAAAAABAAAAdPcaAAAAAAAA9xoAAAAAAAABAAAAbPYaAAAAAAAA9hoAAAAAAAABAAAAb/UaAAAAAAAA9RoAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAA+RoAAAAAAAD5GgAAAAAAAAAAAAAAAPC/"
				],
				[
					638,
					1,
					"insert",
					{
						"characters": "set_volt"
					},
					"CAAAAPUaAAAAAAAA9hoAAAAAAAAAAAAA9hoAAAAAAAD3GgAAAAAAAAAAAAD3GgAAAAAAAPgaAAAAAAAAAAAAAPgaAAAAAAAA+RoAAAAAAAAAAAAA+RoAAAAAAAD6GgAAAAAAAAAAAAD6GgAAAAAAAPsaAAAAAAAAAAAAAPsaAAAAAAAA/BoAAAAAAAAAAAAA/BoAAAAAAAD9GgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9RoAAAAAAAD1GgAAAAAAAAAAAAAAAPC/"
				],
				[
					639,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP0aAAAAAAAA/hoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/RoAAAAAAAD9GgAAAAAAAAAAAAAAAPC/"
				],
				[
					640,
					1,
					"left_delete",
					null,
					"AQAAAP0aAAAAAAAA/RoAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA/hoAAAAAAAD+GgAAAAAAAAAAAAAAAPC/"
				],
				[
					641,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAP0aAAAAAAAA/hoAAAAAAAAAAAAA/hoAAAAAAAD/GgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/RoAAAAAAAD9GgAAAAAAAAAAAAAAAPC/"
				],
				[
					642,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP8aAAAAAAAAABsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xoAAAAAAAD/GgAAAAAAAAAAAAAAAPC/"
				],
				[
					643,
					1,
					"paste",
					null,
					"AQAAAAAbAAAAAAAAGhsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABsAAAAAAAAAGwAAAAAAAAAAAAAAAPC/"
				],
				[
					646,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAPUaAAAAAAAA9hoAAAAAAAAAAAAA9hoAAAAAAAACGwAAAAAAAAAAAAD2GgAAAAAAAPYaAAAAAAAADAAAACAgICAgICAgICAgIPYaAAAAAAAABhsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9RoAAAAAAAD1GgAAAAAAAAAAAAAAAPC/"
				],
				[
					648,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAPQaAAAAAAAA9BoAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAABhsAAAAAAAAGGwAAAAAAAAAAAAAAAPC/"
				],
				[
					656,
					1,
					"paste",
					null,
					"AgAAAOUjAAAAAAAA7SMAAAAAAAAAAAAA7SMAAAAAAADtIwAAAAAAABoAAABfZG9lLlNpUE1Wb2x0YWdlU3lzVm9sdGFnZQ",
					"AQAAAAAAAAABAAAA/yMAAAAAAADlIwAAAAAAAAAAAAAAAPC/"
				],
				[
					672,
					3,
					"left_delete",
					null,
					"AwAAAM8aAAAAAAAAzxoAAAAAAAABAAAAIM4aAAAAAAAAzhoAAAAAAAABAAAALM0aAAAAAAAAzRoAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAA0BoAAAAAAADQGgAAAAAAAAAAAAAAAPC/"
				],
				[
					678,
					1,
					"insert",
					{
						"characters": "\nspdl"
					},
					"BwAAAI4dAAAAAAAAjx0AAAAAAAAAAAAAjx0AAAAAAACfHQAAAAAAAAAAAACfHQAAAAAAAKMdAAAAAAAAAAAAAKMdAAAAAAAApB0AAAAAAAAAAAAApB0AAAAAAAClHQAAAAAAAAAAAAClHQAAAAAAAKYdAAAAAAAAAAAAAKYdAAAAAAAApx0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjh0AAAAAAACOHQAAAAAAAAAAAAAAAPC/"
				],
				[
					679,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"clangd\",\"item\":{\"insertTextFormat\":2,\"textEdit\":{\"range\":{\"end\":{\"character\":24,\"line\":246},\"start\":{\"character\":20,\"line\":246}},\"newText\":\"spdlog\"},\"label\":\" spdlog\",\"filterText\":\"spdlog\",\"kind\":9,\"score\":9.16388988494873,\"insertText\":\"spdlog\",\"sortText\":\"3eed60b5spdlog\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							434,
							678,
							7
						],
						"trigger": "spdlog"
					},
					"AgAAAKMdAAAAAAAAox0AAAAAAAAEAAAAc3BkbKMdAAAAAAAAqR0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApx0AAAAAAACnHQAAAAAAAAAAAAAAAPC/"
				],
				[
					680,
					1,
					"insert",
					{
						"characters": "::info"
					},
					"BgAAAKkdAAAAAAAAqh0AAAAAAAAAAAAAqh0AAAAAAACrHQAAAAAAAAAAAACrHQAAAAAAAKwdAAAAAAAAAAAAAKwdAAAAAAAArR0AAAAAAAAAAAAArR0AAAAAAACuHQAAAAAAAAAAAACuHQAAAAAAAK8dAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqR0AAAAAAACpHQAAAAAAAAAAAAAAAPC/"
				],
				[
					681,
					4,
					"left_delete",
					null,
					"BAAAAK4dAAAAAAAArh0AAAAAAAABAAAAb60dAAAAAAAArR0AAAAAAAABAAAAZqwdAAAAAAAArB0AAAAAAAABAAAAbqsdAAAAAAAAqx0AAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAArx0AAAAAAACvHQAAAAAAAAAAAAAAAPC/"
				],
				[
					682,
					1,
					"insert",
					{
						"characters": "error"
					},
					"BQAAAKsdAAAAAAAArB0AAAAAAAAAAAAArB0AAAAAAACtHQAAAAAAAAAAAACtHQAAAAAAAK4dAAAAAAAAAAAAAK4dAAAAAAAArx0AAAAAAAAAAAAArx0AAAAAAACwHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqx0AAAAAAACrHQAAAAAAAAAAAAAAAPC/"
				],
				[
					683,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALAdAAAAAAAAsh0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsB0AAAAAAACwHQAAAAAAAAAAAAAAAPC/"
				],
				[
					684,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALEdAAAAAAAAsh0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsR0AAAAAAACxHQAAAAAAAAAAAAAAAPC/"
				],
				[
					685,
					1,
					"left_delete",
					null,
					"AQAAALEdAAAAAAAAsR0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAsh0AAAAAAACyHQAAAAAAAAAAAAAAAPC/"
				],
				[
					686,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAALEdAAAAAAAAsx0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsR0AAAAAAACxHQAAAAAAAAAAAAAAAPC/"
				],
				[
					687,
					1,
					"insert",
					{
						"characters": "Port"
					},
					"BAAAALIdAAAAAAAAsx0AAAAAAAAAAAAAsx0AAAAAAAC0HQAAAAAAAAAAAAC0HQAAAAAAALUdAAAAAAAAAAAAALUdAAAAAAAAth0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsh0AAAAAAACyHQAAAAAAAAAAAAAAAPC/"
				],
				[
					688,
					1,
					"insert",
					{
						"characters": " with"
					},
					"BQAAALYdAAAAAAAAtx0AAAAAAAAAAAAAtx0AAAAAAAC4HQAAAAAAAAAAAAC4HQAAAAAAALkdAAAAAAAAAAAAALkdAAAAAAAAuh0AAAAAAAAAAAAAuh0AAAAAAAC7HQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAth0AAAAAAAC2HQAAAAAAAAAAAAAAAPC/"
				],
				[
					689,
					1,
					"insert",
					{
						"characters": " port"
					},
					"BQAAALsdAAAAAAAAvB0AAAAAAAAAAAAAvB0AAAAAAAC9HQAAAAAAAAAAAAC9HQAAAAAAAL4dAAAAAAAAAAAAAL4dAAAAAAAAvx0AAAAAAAAAAAAAvx0AAAAAAADAHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAux0AAAAAAAC7HQAAAAAAAAAAAAAAAPC/"
				],
				[
					690,
					1,
					"insert",
					{
						"characters": " name"
					},
					"BQAAAMAdAAAAAAAAwR0AAAAAAAAAAAAAwR0AAAAAAADCHQAAAAAAAAAAAADCHQAAAAAAAMMdAAAAAAAAAAAAAMMdAAAAAAAAxB0AAAAAAAAAAAAAxB0AAAAAAADFHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwB0AAAAAAADAHQAAAAAAAAAAAAAAAPC/"
				],
				[
					691,
					1,
					"insert",
					{
						"characters": " {0}"
					},
					"BAAAAMUdAAAAAAAAxh0AAAAAAAAAAAAAxh0AAAAAAADHHQAAAAAAAAAAAADHHQAAAAAAAMgdAAAAAAAAAAAAAMgdAAAAAAAAyR0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxR0AAAAAAADFHQAAAAAAAAAAAAAAAPC/"
				],
				[
					692,
					1,
					"insert",
					{
						"characters": " was"
					},
					"BAAAAMkdAAAAAAAAyh0AAAAAAAAAAAAAyh0AAAAAAADLHQAAAAAAAAAAAADLHQAAAAAAAMwdAAAAAAAAAAAAAMwdAAAAAAAAzR0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyR0AAAAAAADJHQAAAAAAAAAAAAAAAPC/"
				],
				[
					693,
					1,
					"insert",
					{
						"characters": " not"
					},
					"BAAAAM0dAAAAAAAAzh0AAAAAAAAAAAAAzh0AAAAAAADPHQAAAAAAAAAAAADPHQAAAAAAANAdAAAAAAAAAAAAANAdAAAAAAAA0R0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzR0AAAAAAADNHQAAAAAAAAAAAAAAAPC/"
				],
				[
					694,
					1,
					"insert",
					{
						"characters": " open"
					},
					"BQAAANEdAAAAAAAA0h0AAAAAAAAAAAAA0h0AAAAAAADTHQAAAAAAAAAAAADTHQAAAAAAANQdAAAAAAAAAAAAANQdAAAAAAAA1R0AAAAAAAAAAAAA1R0AAAAAAADWHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0R0AAAAAAADRHQAAAAAAAAAAAAAAAPC/"
				],
				[
					696,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANcdAAAAAAAA2B0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1x0AAAAAAADXHQAAAAAAAAAAAAAAAPC/"
				],
				[
					697,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANgdAAAAAAAA2R0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2B0AAAAAAADYHQAAAAAAAAAAAAAAAPC/"
				],
				[
					705,
					1,
					"paste",
					null,
					"AQAAANkdAAAAAAAA4h0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2R0AAAAAAADZHQAAAAAAAAAAAAAAAPC/"
				],
				[
					707,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOMdAAAAAAAA5B0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4x0AAAAAAADjHQAAAAAAAAAAAAAAAPC/"
				],
				[
					712,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAANkdAAAAAAAA2h0AAAAAAAAAAAAA2h0AAAAAAADuHQAAAAAAAAAAAADaHQAAAAAAANodAAAAAAAAFAAAACAgICAgICAgICAgICAgICAgICAg2h0AAAAAAADyHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2R0AAAAAAADZHQAAAAAAAAAAAAAAAPC/"
				],
				[
					714,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAANgdAAAAAAAA2B0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA8h0AAAAAAADyHQAAAAAAAAAAAAAAAPC/"
				],
				[
					720,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAFgeAAAAAAAAWR4AAAAAAAAAAAAAWR4AAAAAAABpHgAAAAAAAAAAAABpHgAAAAAAAG0eAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWB4AAAAAAABYHgAAAAAAAAAAAAAAAPC/"
				],
				[
					721,
					1,
					"paste",
					null,
					"AQAAAG0eAAAAAAAA2h4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbR4AAAAAAABtHgAAAAAAAAAAAAAAAPC/"
				],
				[
					727,
					5,
					"unindent",
					null,
					"BQAAAFkeAAAAAAAAWR4AAAAAAAAEAAAAICAgIFkeAAAAAAAAWR4AAAAAAAAEAAAAICAgIFkeAAAAAAAAWR4AAAAAAAAEAAAAICAgIFkeAAAAAAAAWR4AAAAAAAAEAAAAICAgIFkeAAAAAAAAWR4AAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAgR4AAAAAAACBHgAAAAAAAAAAAAAAAPC/"
				],
				[
					742,
					1,
					"paste",
					null,
					"AgAAAGAdAAAAAAAAdx0AAAAAAAAAAAAAdx0AAAAAAAB3HQAAAAAAAAkAAABwb3J0X25hbWU",
					"AQAAAAAAAAABAAAAYB0AAAAAAABpHQAAAAAAAAAAAAAAAPC/"
				],
				[
					752,
					1,
					"paste",
					null,
					"AgAAAP8dAAAAAAAAFh4AAAAAAAAAAAAAFh4AAAAAAAAWHgAAAAAAAAkAAABwb3J0X25hbWU",
					"AQAAAAAAAAABAAAA/x0AAAAAAAAIHgAAAAAAAAAAAAAAAPC/"
				],
				[
					757,
					1,
					"paste",
					null,
					"AgAAANceAAAAAAAA7h4AAAAAAAAAAAAA7h4AAAAAAADuHgAAAAAAAAkAAABwb3J0X25hbWU",
					"AQAAAAAAAAABAAAA1x4AAAAAAADgHgAAAAAAAAAAAAAAAPC/"
				],
				[
					762,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAM0aAAAAAAAAzhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzRoAAAAAAADNGgAAAAAAAAAAAAAAAPC/"
				],
				[
					763,
					1,
					"left_delete",
					null,
					"AQAAAM0aAAAAAAAAzRoAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAzhoAAAAAAADOGgAAAAAAAAAAAAAAAPC/"
				],
				[
					764,
					1,
					"insert",
					{
						"characters": "=,"
					},
					"AgAAAM0aAAAAAAAAzhoAAAAAAAAAAAAAzhoAAAAAAADPGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzRoAAAAAAADNGgAAAAAAAAAAAAAAAPC/"
				],
				[
					765,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM8aAAAAAAAA0BoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzxoAAAAAAADPGgAAAAAAAAAAAAAAAPC/"
				],
				[
					785,
					1,
					"paste",
					null,
					"AgAAAOskAAAAAAAABSUAAAAAAAAAAAAABSUAAAAAAAAFJQAAAAAAAAgAAABzZXRfdm9sdA",
					"AQAAAAAAAAABAAAA6yQAAAAAAADzJAAAAAAAAAAAAAAAAPC/"
				],
				[
					794,
					1,
					"left_delete",
					null,
					"AQAAAM4aAAAAAAAAzhoAAAAAAABcAAAALCBwb3J0X25hbWUgPSBfZG9lLlNpUE1Wb2x0YWdlU3lzUG9ydCwKICAgICAgICAgICAgICAgIHNldF92b2x0ID0gX2RvZS5TaVBNVm9sdGFnZVN5c1ZvbHRhZ2U",
					"AQAAAAAAAAABAAAAKhsAAAAAAADOGgAAAAAAAAAAAAAAAPC/"
				],
				[
					799,
					2,
					"left_delete",
					null,
					"AgAAANAaAAAAAAAA0BoAAAAAAAAMAAAAICAgICAgICAgICAgzxoAAAAAAADPGgAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAA3BoAAAAAAADQGgAAAAAAAAAAAAAAAPC/"
				],
				[
					800,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM8aAAAAAAAA0BoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzxoAAAAAAADPGgAAAAAAAAAAAAAAAPC/"
				],
				[
					812,
					1,
					"left_delete",
					null,
					"AQAAAO6ZAAAAAAAA7pkAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAA75kAAAAAAADvmQAAAAAAAAAAAAAAAPC/"
				],
				[
					813,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAO6ZAAAAAAAA75kAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7pkAAAAAAADumQAAAAAAAAAAAAAAAPC/"
				],
				[
					818,
					1,
					"unindent",
					null,
					"AQAAAIOgAAAAAAAAg6AAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAm6AAAAAAAACboAAAAAAAAAAAAAAAAPC/"
				],
				[
					827,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"BQAAAGCgAAAAAAAAYKAAAAAAAAADAAAALy8gLKAAAAAAAAAsoAAAAAAAAAMAAAAvLyD8nwAAAAAAAPyfAAAAAAAAAwAAAC8vINSfAAAAAAAA1J8AAAAAAAADAAAALy8gpZ8AAAAAAAClnwAAAAAAAAMAAAAvLyA",
					"AQAAAAAAAAABAAAAgqAAAAAAAACRnwAAAAAAAAAAAAAAAPC/"
				],
				[
					839,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAD6gAAAAAAAAP6AAAAAAAAAAAAAAP6AAAAAAAABToAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPqAAAAAAAAA+oAAAAAAAAAAAAAAAAPC/"
				],
				[
					840,
					1,
					"paste",
					null,
					"AQAAAFOgAAAAAAAA1KAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAU6AAAAAAAABToAAAAAAAAAAAAAAAAPC/"
				],
				[
					843,
					5,
					"unindent",
					null,
					"BQAAAD+gAAAAAAAAP6AAAAAAAAAEAAAAICAgID+gAAAAAAAAP6AAAAAAAAAEAAAAICAgID+gAAAAAAAAP6AAAAAAAAAEAAAAICAgID+gAAAAAAAAP6AAAAAAAAAEAAAAICAgID+gAAAAAAAAP6AAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAZ6AAAAAAAABnoAAAAAAAAAAAAAAAAPC/"
				],
				[
					846,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AwAAACOgAAAAAAAAJqAAAAAAAAAAAAAA9p8AAAAAAAD5nwAAAAAAAAAAAADRnwAAAAAAANSfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPqAAAAAAAAC9nwAAAAAAAAAAAAAAAPC/"
				],
				[
					854,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAGegAAAAAAAAaKAAAAAAAAAAAAAAaKAAAAAAAABooAAAAAAAAAQAAAB0aW1l",
					"AQAAAAAAAAABAAAAZ6AAAAAAAABroAAAAAAAAAAAAAAAAPC/"
				],
				[
					858,
					1,
					"left_delete",
					null,
					"AQAAAImgAAAAAAAAiaAAAAAAAAAMAAAAdm9sdC52YWx1ZSgp",
					"AQAAAAAAAAABAAAAiaAAAAAAAACVoAAAAAAAAAAAAAAAAPC/"
				],
				[
					859,
					1,
					"insert",
					{
						"characters": "1.,0"
					},
					"BAAAAImgAAAAAAAAiqAAAAAAAAAAAAAAiqAAAAAAAACLoAAAAAAAAAAAAACLoAAAAAAAAIygAAAAAAAAAAAAAIygAAAAAAAAjaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiaAAAAAAAACJoAAAAAAAAAAAAAAAAPC/"
				],
				[
					865,
					1,
					"left_delete",
					null,
					"AQAAAIugAAAAAAAAi6AAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAjKAAAAAAAACMoAAAAAAAAAAAAAAAAPC/"
				],
				[
					870,
					1,
					"left_delete",
					null,
					"AQAAALCgAAAAAAAAsKAAAAAAAAAMAAAAY3Vyci52YWx1ZSgp",
					"AQAAAAAAAAABAAAAsKAAAAAAAAC8oAAAAAAAAAAAAAAAAPC/"
				],
				[
					871,
					1,
					"insert",
					{
						"characters": "1-e6"
					},
					"BAAAALCgAAAAAAAAsaAAAAAAAAAAAAAAsaAAAAAAAACyoAAAAAAAAAAAAACyoAAAAAAAALOgAAAAAAAAAAAAALOgAAAAAAAAtKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsKAAAAAAAACwoAAAAAAAAAAAAAAAAPC/"
				],
				[
					875,
					2,
					"left_delete",
					null,
					"AgAAALKgAAAAAAAAsqAAAAAAAAABAAAAZbGgAAAAAAAAsaAAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAs6AAAAAAAACzoAAAAAAAAAAAAAAAAPC/"
				],
				[
					876,
					1,
					"insert",
					{
						"characters": "e-"
					},
					"AgAAALGgAAAAAAAAsqAAAAAAAAAAAAAAsqAAAAAAAACzoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsaAAAAAAAACxoAAAAAAAAAAAAAAAAPC/"
				],
				[
					881,
					2,
					"left_delete",
					null,
					"AgAAAOugAAAAAAAA66AAAAAAAAAeAAAAICAgICAgICAgICAgICAgICAgICByZXR1cm4ge3076qAAAAAAAADqoAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAACaEAAAAAAADroAAAAAAAAAAAAAAAAPC/"
				],
				[
					911,
					1,
					"cut",
					null,
					"AQAAAEKXAAAAAAAAQpcAAAAAAAD8AQAAICAgICAgICBzdGF0aWMgYm9vbCBvcGVuX2ZpbGUgPSBmYWxzZTsKICAgICAgICBpZighb3Blbl9maWxlKSB7CiAgICAgICAgICAgIHNwZGxvZzo6aW5mbygiVHJ5aW5nIHRvIG9wZW4gZmlsZSB7MH0iLCBfZG9lLlJ1bkRpcgogICAgICAgICAgICAgICAgKyAiLyIgKyBfZG9lLlJ1bk5hbWUKICAgICAgICAgICAgICAgICsgIi9TSVBNX1ZPTFRBR0VTLnR4dCIpOwogICAgICAgICAgICBvcGVuKF92b2x0YWdlc19maWxlLCBfZG9lLlJ1bkRpcgogICAgICAgICAgICAgICAgKyAiLyIgKyBfZG9lLlJ1bk5hbWUKICAgICAgICAgICAgICAgICsgIi9TSVBNX1ZPTFRBR0VTLnR4dCIpOwoKICAgICAgICAgICAgYm9vbCBzID0gX3ZvbHRhZ2VzX2ZpbGUgPiAwOwogICAgICAgICAgICBpZiAoIXMpIHsKICAgICAgICAgICAgICAgIHNwZGxvZzo6ZXJyb3IoIkZhaWxlZCB0byBvcGVuIHZvbHRhZ2UgZmlsZSIpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIG9wZW5fZmlsZSA9IHRydWU7CiAgICAgICAgfQ",
					"AQAAAAAAAAABAAAAPpkAAAAAAABClwAAAAAAAAAAAAAAAPC/"
				],
				[
					912,
					2,
					"left_delete",
					null,
					"AgAAAEGXAAAAAAAAQZcAAAAAAAABAAAACkCXAAAAAAAAQJcAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAQpcAAAAAAABClwAAAAAAAAAAAAAAAPC/"
				],
				[
					914,
					1,
					"left_delete",
					null,
					"AQAAAECXAAAAAAAAQJcAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAQZcAAAAAAABBlwAAAAAAAAAAAAAAgHNA"
				],
				[
					919,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAItCAAAAAAAAjEIAAAAAAAAAAAAAjEIAAAAAAACUQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAi0IAAAAAAACLQgAAAAAAAAAAAAAAAPC/"
				],
				[
					920,
					1,
					"paste",
					null,
					"AQAAAJRCAAAAAAAAkEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlEIAAAAAAACUQgAAAAAAAAAAAAAAAPC/"
				],
				[
					923,
					2,
					"unindent",
					null,
					"AgAAAIxCAAAAAAAAjEIAAAAAAAAEAAAAICAgIIxCAAAAAAAAjEIAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAnEIAAAAAAACcQgAAAAAAAAAAAAAAAPC/"
				],
				[
					926,
					1,
					"left_delete",
					null,
					"AQAAAIxCAAAAAAAAjEIAAAAAAAA/AAAAICAgICAgICBzdGF0aWMgYm9vbCBvcGVuX2ZpbGUgPSBmYWxzZTsKICAgICAgICBpZighb3Blbl9maWxlKSB7",
					"AQAAAAAAAAABAAAAy0IAAAAAAACMQgAAAAAAAAAAAAAAAPC/"
				],
				[
					929,
					1,
					"left_delete",
					null,
					"AQAAACJEAAAAAAAAIkQAAAAAAAAoAAAAICAgICAgICAgICAgb3Blbl9maWxlID0gdHJ1ZTsKICAgICAgICB9Cg",
					"AQAAAAAAAAABAAAASkQAAAAAAAAiRAAAAAAAAAAAAAAAAPC/"
				],
				[
					932,
					1,
					"unindent",
					null,
					"CgAAAI1CAAAAAAAAjUIAAAAAAAAEAAAAICAgIMlCAAAAAAAAyUIAAAAAAAAEAAAAICAgIOpCAAAAAAAA6kIAAAAAAAAEAAAAICAgIA9DAAAAAAAAD0MAAAAAAAAEAAAAICAgIDhDAAAAAAAAOEMAAAAAAAAEAAAAICAgIFlDAAAAAAAAWUMAAAAAAAAEAAAAICAgIH9DAAAAAAAAf0MAAAAAAAAEAAAAICAgIKRDAAAAAAAApEMAAAAAAAAEAAAAICAgILZDAAAAAAAAtkMAAAAAAAAEAAAAICAgIPBDAAAAAAAA8EMAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAIUQAAAAAAACQQgAAAAAAAAAAAAAAAPC/"
				],
				[
					936,
					1,
					"left_delete",
					null,
					"AQAAAIdDAAAAAAAAh0MAAAAAAAAEAAAAYm9vbA",
					"AQAAAAAAAAABAAAAh0MAAAAAAACLQwAAAAAAAAAAAAAAAPC/"
				],
				[
					938,
					1,
					"left_delete",
					null,
					"AQAAAIdDAAAAAAAAh0MAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAiEMAAAAAAACIQwAAAAAAAAAAAAAAAPC/"
				],
				[
					945,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AwAAAJOfAAAAAAAAk58AAAAAAAADAAAALy8gY58AAAAAAABjnwAAAAAAAAMAAAAvLyA7nwAAAAAAADufAAAAAAAAAwAAAC8vIA",
					"AQAAAAAAAAABAAAAsZ8AAAAAAAAnnwAAAAAAAAAAAAAAAPC/"
				],
				[
					950,
					2,
					"left_delete",
					null,
					"AgAAAKmfAAAAAAAAqZ8AAAAAAABtAAAAICAgICAgICAgICAgICAgICAgICBvdXQuVGltZSA9IDA7CiAgICAgICAgICAgICAgICAgICAgb3V0LlZvbHQgPSAxLjA7CiAgICAgICAgICAgICAgICAgICAgb3V0LkN1cnJlbnQgPSAxZS02O6ifAAAAAAAAqJ8AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAFqAAAAAAAACpnwAAAAAAAAAAAAAAAPC/"
				],
				[
					955,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"GwAAAPWeAAAAAAAA9Z4AAAAAAAADAAAALy8gz54AAAAAAADPngAAAAAAAAMAAAAvLyCrngAAAAAAAKueAAAAAAAAAwAAAC8vIHueAAAAAAAAe54AAAAAAAADAAAALy8gO54AAAAAAAA7ngAAAAAAAAMAAAAvLyAGngAAAAAAAAaeAAAAAAAAAwAAAC8vINWdAAAAAAAA1Z0AAAAAAAADAAAALy8gop0AAAAAAACinQAAAAAAAAMAAAAvLyBmnQAAAAAAAGadAAAAAAAAAwAAAC8vIDGdAAAAAAAAMZ0AAAAAAAADAAAALy8g6ZwAAAAAAADpnAAAAAAAAAMAAAAvLyDPnAAAAAAAAM+cAAAAAAAAAwAAAC8vIKmcAAAAAAAAqZwAAAAAAAADAAAALy8ghZwAAAAAAACFnAAAAAAAAAMAAAAvLyBFnAAAAAAAAEWcAAAAAAAAAwAAAC8vIBCcAAAAAAAAEJwAAAAAAAADAAAALy8g35sAAAAAAADfmwAAAAAAAAMAAAAvLyCsmwAAAAAAAKybAAAAAAAAAwAAAC8vIHGbAAAAAAAAcZsAAAAAAAADAAAALy8gPJsAAAAAAAA8mwAAAAAAAAMAAAAvLyAhmwAAAAAAACGbAAAAAAAAAwAAAC8vIASbAAAAAAAABJsAAAAAAAADAAAALy8gxZoAAAAAAADFmgAAAAAAAAMAAAAvLyCNmgAAAAAAAI2aAAAAAAAAAwAAAC8vIFOaAAAAAAAAU5oAAAAAAAADAAAALy8g/5kAAAAAAAD/mQAAAAAAAAMAAAAvLyC9mQAAAAAAAL2ZAAAAAAAAAwAAAC8vIA",
					"AQAAAAAAAAABAAAA+Z4AAAAAAAComQAAAAAAAAAAAAAAAPC/"
				],
				[
					961,
					2,
					"left_delete",
					null,
					"AgAAAKiZAAAAAAAAqJkAAAAAAAA/AAAACiAgICAgICAgICAgICAgICAgICAgc3BkbG9nOjplcnJvcigiU3RhcnRpbmcgbmV3IG1lYXN1cmVtZW50Iik7p5kAAAAAAACnmQAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAA55kAAAAAAAComQAAAAAAAAAAAAAAAPC/"
				],
				[
					978,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"DwAAAJgoAAAAAAAAmCgAAAAAAAADAAAALy8gZigAAAAAAABmKAAAAAAAAAMAAAAvLyA0KAAAAAAAADQoAAAAAAAAAwAAAC8vIAEoAAAAAAAAASgAAAAAAAADAAAALy8g0CcAAAAAAADQJwAAAAAAAAMAAAAvLyB/JwAAAAAAAH8nAAAAAAAAAwAAAC8vIEsnAAAAAAAASycAAAAAAAADAAAALy8gGCcAAAAAAAAYJwAAAAAAAAMAAAAvLyDlJgAAAAAAAOUmAAAAAAAAAwAAAC8vILEmAAAAAAAAsSYAAAAAAAADAAAALy8geCYAAAAAAAB4JgAAAAAAAAMAAAAvLyBNJgAAAAAAAE0mAAAAAAAAAwAAAC8vIPslAAAAAAAA+yUAAAAAAAADAAAALy8gxiUAAAAAAADGJQAAAAAAAAMAAAAvLyCUJQAAAAAAAJQlAAAAAAAAAwAAAC8vIA",
					"AQAAAAAAAAABAAAAuygAAAAAAACEJQAAAAAAAAAAAAAAAPC/"
				],
				[
					986,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAACskAAAAAAAALCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKyQAAAAAAAArJAAAAAAAAAAAAAAAAPC/"
				],
				[
					996,
					1,
					"left_delete",
					null,
					"AQAAAOElAAAAAAAA4SUAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAA4iUAAAAAAADiJQAAAAAAAAAAAAAAAPC/"
				],
				[
					997,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAOElAAAAAAAA4iUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4SUAAAAAAADhJQAAAAAAAAAAAAAAAPC/"
				],
				[
					1000,
					1,
					"left_delete",
					null,
					"AQAAAOElAAAAAAAA4SUAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAA4iUAAAAAAADiJQAAAAAAAAAAAAAAAPC/"
				],
				[
					1001,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAOElAAAAAAAA4iUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4SUAAAAAAADhJQAAAAAAAAAAAAAAAPC/"
				],
				[
					1006,
					1,
					"left_delete",
					null,
					"AQAAAGYrAAAAAAAAZisAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAZysAAAAAAABnKwAAAAAAAAAAAAAAAPC/"
				],
				[
					1008,
					1,
					"left_delete",
					null,
					"AQAAAGYrAAAAAAAAZisAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAZysAAAAAAABnKwAAAAAAAAAAAAAAAFJA"
				],
				[
					1092,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKdGAAAAAAAAqEYAAAAAAAAAAAAAqEYAAAAAAAC0RgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAp0YAAAAAAACnRgAAAAAAAAAAAAAAAPC/"
				],
				[
					1093,
					1,
					"paste",
					null,
					"AQAAALRGAAAAAAAA5UYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtEYAAAAAAAC0RgAAAAAAAAAAAAAAAPC/"
				],
				[
					1101,
					1,
					"paste",
					null,
					"AgAAAMpGAAAAAAAA0EYAAAAAAAAAAAAA0EYAAAAAAADQRgAAAAAAABoAAABfY2Flbl9wb3J0LT5EYXRhLk51bUV2ZW50cw",
					"AQAAAAAAAAABAAAAykYAAAAAAADkRgAAAAAAAAAAAAAAAPC/"
				],
				[
					1104,
					1,
					"insert",
					{
						"characters": "\n//"
					},
					"BAAAAKdGAAAAAAAAqEYAAAAAAAAAAAAAqEYAAAAAAAC0RgAAAAAAAAAAAAC0RgAAAAAAALVGAAAAAAAAAAAAALVGAAAAAAAAtkYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAp0YAAAAAAACnRgAAAAAAAAAAAAAAAPC/"
				],
				[
					1105,
					1,
					"insert",
					{
						"characters": " Due"
					},
					"BAAAALZGAAAAAAAAt0YAAAAAAAAAAAAAt0YAAAAAAAC4RgAAAAAAAAAAAAC4RgAAAAAAALlGAAAAAAAAAAAAALlGAAAAAAAAukYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtkYAAAAAAAC2RgAAAAAAAAAAAAAAAPC/"
				],
				[
					1106,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAALpGAAAAAAAAu0YAAAAAAAAAAAAAu0YAAAAAAAC8RgAAAAAAAAAAAAC8RgAAAAAAAL1GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAukYAAAAAAAC6RgAAAAAAAAAAAAAAAPC/"
				],
				[
					1107,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAL1GAAAAAAAAvkYAAAAAAAAAAAAAvkYAAAAAAAC/RgAAAAAAAAAAAAC/RgAAAAAAAMBGAAAAAAAAAAAAAMBGAAAAAAAAwUYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvUYAAAAAAAC9RgAAAAAAAAAAAAAAAPC/"
				],
				[
					1108,
					1,
					"insert",
					{
						"characters": " slow"
					},
					"BQAAAMFGAAAAAAAAwkYAAAAAAAAAAAAAwkYAAAAAAADDRgAAAAAAAAAAAADDRgAAAAAAAMRGAAAAAAAAAAAAAMRGAAAAAAAAxUYAAAAAAAAAAAAAxUYAAAAAAADGRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwUYAAAAAAADBRgAAAAAAAAAAAAAAAPC/"
				],
				[
					1109,
					1,
					"insert",
					{
						"characters": " rate"
					},
					"BQAAAMZGAAAAAAAAx0YAAAAAAAAAAAAAx0YAAAAAAADIRgAAAAAAAAAAAADIRgAAAAAAAMlGAAAAAAAAAAAAAMlGAAAAAAAAykYAAAAAAAAAAAAAykYAAAAAAADLRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxkYAAAAAAADGRgAAAAAAAAAAAAAAAPC/"
				],
				[
					1110,
					1,
					"insert",
					{
						"characters": " oscilloscope"
					},
					"DQAAAMtGAAAAAAAAzEYAAAAAAAAAAAAAzEYAAAAAAADNRgAAAAAAAAAAAADNRgAAAAAAAM5GAAAAAAAAAAAAAM5GAAAAAAAAz0YAAAAAAAAAAAAAz0YAAAAAAADQRgAAAAAAAAAAAADQRgAAAAAAANFGAAAAAAAAAAAAANFGAAAAAAAA0kYAAAAAAAAAAAAA0kYAAAAAAADTRgAAAAAAAAAAAADTRgAAAAAAANRGAAAAAAAAAAAAANRGAAAAAAAA1UYAAAAAAAAAAAAA1UYAAAAAAADWRgAAAAAAAAAAAADWRgAAAAAAANdGAAAAAAAAAAAAANdGAAAAAAAA2EYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAy0YAAAAAAADLRgAAAAAAAAAAAAAAAPC/"
				],
				[
					1111,
					1,
					"insert",
					{
						"characters": " mode"
					},
					"BQAAANhGAAAAAAAA2UYAAAAAAAAAAAAA2UYAAAAAAADaRgAAAAAAAAAAAADaRgAAAAAAANtGAAAAAAAAAAAAANtGAAAAAAAA3EYAAAAAAAAAAAAA3EYAAAAAAADdRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2EYAAAAAAADYRgAAAAAAAAAAAAAAAPC/"
				],
				[
					1112,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAN1GAAAAAAAA3kYAAAAAAAAAAAAA3kYAAAAAAADfRgAAAAAAAAAAAADfRgAAAAAAAOBGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3UYAAAAAAADdRgAAAAAAAAAAAAAAAPC/"
				],
				[
					1113,
					1,
					"insert",
					{
						"characters": " happening,"
					},
					"CwAAAOBGAAAAAAAA4UYAAAAAAAAAAAAA4UYAAAAAAADiRgAAAAAAAAAAAADiRgAAAAAAAONGAAAAAAAAAAAAAONGAAAAAAAA5EYAAAAAAAAAAAAA5EYAAAAAAADlRgAAAAAAAAAAAADlRgAAAAAAAOZGAAAAAAAAAAAAAOZGAAAAAAAA50YAAAAAAAAAAAAA50YAAAAAAADoRgAAAAAAAAAAAADoRgAAAAAAAOlGAAAAAAAAAAAAAOlGAAAAAAAA6kYAAAAAAAAAAAAA6kYAAAAAAADrRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4EYAAAAAAADgRgAAAAAAAAAAAAAAAPC/"
				],
				[
					1114,
					1,
					"insert",
					{
						"characters": " using"
					},
					"BgAAAOtGAAAAAAAA7EYAAAAAAAAAAAAA7EYAAAAAAADtRgAAAAAAAAAAAADtRgAAAAAAAO5GAAAAAAAAAAAAAO5GAAAAAAAA70YAAAAAAAAAAAAA70YAAAAAAADwRgAAAAAAAAAAAADwRgAAAAAAAPFGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA60YAAAAAAADrRgAAAAAAAAAAAAAAAPC/"
				],
				[
					1115,
					1,
					"insert",
					{
						"characters": "\n//"
					},
					"BAAAAPFGAAAAAAAA8kYAAAAAAAAAAAAA8kYAAAAAAAD+RgAAAAAAAAAAAAD+RgAAAAAAAP9GAAAAAAAAAAAAAP9GAAAAAAAAAEcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8UYAAAAAAADxRgAAAAAAAAAAAAAAAPC/"
				],
				[
					1116,
					1,
					"insert",
					{
						"characters": " events"
					},
					"BwAAAABHAAAAAAAAAUcAAAAAAAAAAAAAAUcAAAAAAAACRwAAAAAAAAAAAAACRwAAAAAAAANHAAAAAAAAAAAAAANHAAAAAAAABEcAAAAAAAAAAAAABEcAAAAAAAAFRwAAAAAAAAAAAAAFRwAAAAAAAAZHAAAAAAAAAAAAAAZHAAAAAAAAB0cAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAEcAAAAAAAAARwAAAAAAAAAAAAAAAPC/"
				],
				[
					1117,
					1,
					"insert",
					{
						"characters": " u"
					},
					"AgAAAAdHAAAAAAAACEcAAAAAAAAAAAAACEcAAAAAAAAJRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAB0cAAAAAAAAHRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1118,
					1,
					"left_delete",
					null,
					"AQAAAAhHAAAAAAAACEcAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAACUcAAAAAAAAJRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1119,
					1,
					"insert",
					{
						"characters": "instead"
					},
					"BwAAAAhHAAAAAAAACUcAAAAAAAAAAAAACUcAAAAAAAAKRwAAAAAAAAAAAAAKRwAAAAAAAAtHAAAAAAAAAAAAAAtHAAAAAAAADEcAAAAAAAAAAAAADEcAAAAAAAANRwAAAAAAAAAAAAANRwAAAAAAAA5HAAAAAAAAAAAAAA5HAAAAAAAAD0cAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACEcAAAAAAAAIRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1120,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAA9HAAAAAAAAEEcAAAAAAAAAAAAAEEcAAAAAAAARRwAAAAAAAAAAAAARRwAAAAAAABJHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAD0cAAAAAAAAPRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1121,
					1,
					"insert",
					{
						"characters": " .."
					},
					"AwAAABJHAAAAAAAAE0cAAAAAAAAAAAAAE0cAAAAAAAAURwAAAAAAAAAAAAAURwAAAAAAABVHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEkcAAAAAAAASRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1122,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAABVHAAAAAAAAFkcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFUcAAAAAAAAVRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1123,
					1,
					"left_delete",
					null,
					"AQAAABVHAAAAAAAAFUcAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAFkcAAAAAAAAWRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1124,
					1,
					"insert",
					{
						"characters": "->Data.N"
					},
					"CAAAABVHAAAAAAAAFkcAAAAAAAAAAAAAFkcAAAAAAAAXRwAAAAAAAAAAAAAXRwAAAAAAABhHAAAAAAAAAAAAABhHAAAAAAAAGUcAAAAAAAAAAAAAGUcAAAAAAAAaRwAAAAAAAAAAAAAaRwAAAAAAABtHAAAAAAAAAAAAABtHAAAAAAAAHEcAAAAAAAAAAAAAHEcAAAAAAAAdRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFUcAAAAAAAAVRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1125,
					1,
					"insert",
					{
						"characters": "umEvents"
					},
					"CAAAAB1HAAAAAAAAHkcAAAAAAAAAAAAAHkcAAAAAAAAfRwAAAAAAAAAAAAAfRwAAAAAAACBHAAAAAAAAAAAAACBHAAAAAAAAIUcAAAAAAAAAAAAAIUcAAAAAAAAiRwAAAAAAAAAAAAAiRwAAAAAAACNHAAAAAAAAAAAAACNHAAAAAAAAJEcAAAAAAAAAAAAAJEcAAAAAAAAlRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHUcAAAAAAAAdRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1126,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAACVHAAAAAAAAJkcAAAAAAAAAAAAAJkcAAAAAAAAnRwAAAAAAAAAAAAAnRwAAAAAAAChHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJUcAAAAAAAAlRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1127,
					1,
					"insert",
					{
						"characters": " more"
					},
					"BQAAAChHAAAAAAAAKUcAAAAAAAAAAAAAKUcAAAAAAAAqRwAAAAAAAAAAAAAqRwAAAAAAACtHAAAAAAAAAAAAACtHAAAAAAAALEcAAAAAAAAAAAAALEcAAAAAAAAtRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKEcAAAAAAAAoRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1128,
					1,
					"insert",
					{
						"characters": " realisti"
					},
					"CQAAAC1HAAAAAAAALkcAAAAAAAAAAAAALkcAAAAAAAAvRwAAAAAAAAAAAAAvRwAAAAAAADBHAAAAAAAAAAAAADBHAAAAAAAAMUcAAAAAAAAAAAAAMUcAAAAAAAAyRwAAAAAAAAAAAAAyRwAAAAAAADNHAAAAAAAAAAAAADNHAAAAAAAANEcAAAAAAAAAAAAANEcAAAAAAAA1RwAAAAAAAAAAAAA1RwAAAAAAADZHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALUcAAAAAAAAtRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1129,
					13,
					"left_delete",
					null,
					"DQAAADVHAAAAAAAANUcAAAAAAAABAAAAaTRHAAAAAAAANEcAAAAAAAABAAAAdDNHAAAAAAAAM0cAAAAAAAABAAAAczJHAAAAAAAAMkcAAAAAAAABAAAAaTFHAAAAAAAAMUcAAAAAAAABAAAAbDBHAAAAAAAAMEcAAAAAAAABAAAAYS9HAAAAAAAAL0cAAAAAAAABAAAAZS5HAAAAAAAALkcAAAAAAAABAAAAci1HAAAAAAAALUcAAAAAAAABAAAAICxHAAAAAAAALEcAAAAAAAABAAAAZStHAAAAAAAAK0cAAAAAAAABAAAAcipHAAAAAAAAKkcAAAAAAAABAAAAbylHAAAAAAAAKUcAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAANkcAAAAAAAA2RwAAAAAAAAAAAAAAAPC/"
				],
				[
					1130,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAClHAAAAAAAAKkcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKUcAAAAAAAApRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1131,
					1,
					"insert",
					{
						"characters": " better"
					},
					"BwAAACpHAAAAAAAAK0cAAAAAAAAAAAAAK0cAAAAAAAAsRwAAAAAAAAAAAAAsRwAAAAAAAC1HAAAAAAAAAAAAAC1HAAAAAAAALkcAAAAAAAAAAAAALkcAAAAAAAAvRwAAAAAAAAAAAAAvRwAAAAAAADBHAAAAAAAAAAAAADBHAAAAAAAAMUcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKkcAAAAAAAAqRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1132,
					1,
					"insert",
					{
						"characters": " number"
					},
					"BwAAADFHAAAAAAAAMkcAAAAAAAAAAAAAMkcAAAAAAAAzRwAAAAAAAAAAAAAzRwAAAAAAADRHAAAAAAAAAAAAADRHAAAAAAAANUcAAAAAAAAAAAAANUcAAAAAAAA2RwAAAAAAAAAAAAA2RwAAAAAAADdHAAAAAAAAAAAAADdHAAAAAAAAOEcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMUcAAAAAAAAxRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1133,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAADhHAAAAAAAAOUcAAAAAAAAAAAAAOUcAAAAAAAA6RwAAAAAAAAAAAAA6RwAAAAAAADtHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOEcAAAAAAAA4RwAAAAAAAAAAAAAAAPC/"
				],
				[
					1134,
					1,
					"insert",
					{
						"characters": " use"
					},
					"BAAAADtHAAAAAAAAPEcAAAAAAAAAAAAAPEcAAAAAAAA9RwAAAAAAAAAAAAA9RwAAAAAAAD5HAAAAAAAAAAAAAD5HAAAAAAAAP0cAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAO0cAAAAAAAA7RwAAAAAAAAAAAAAAAPC/"
				],
				[
					1135,
					1,
					"insert",
					{
						"characters": "\n//"
					},
					"BAAAAD9HAAAAAAAAQEcAAAAAAAAAAAAAQEcAAAAAAABMRwAAAAAAAAAAAABMRwAAAAAAAE1HAAAAAAAAAAAAAE1HAAAAAAAATkcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAP0cAAAAAAAA/RwAAAAAAAAAAAAAAAPC/"
				],
				[
					1136,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAE5HAAAAAAAAT0cAAAAAAAAAAAAAT0cAAAAAAABQRwAAAAAAAAAAAABQRwAAAAAAAFFHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATkcAAAAAAABORwAAAAAAAAAAAAAAAPC/"
				],
				[
					1137,
					1,
					"insert",
					{
						"characters": " approximate"
					},
					"DAAAAFFHAAAAAAAAUkcAAAAAAAAAAAAAUkcAAAAAAABTRwAAAAAAAAAAAABTRwAAAAAAAFRHAAAAAAAAAAAAAFRHAAAAAAAAVUcAAAAAAAAAAAAAVUcAAAAAAABWRwAAAAAAAAAAAABWRwAAAAAAAFdHAAAAAAAAAAAAAFdHAAAAAAAAWEcAAAAAAAAAAAAAWEcAAAAAAABZRwAAAAAAAAAAAABZRwAAAAAAAFpHAAAAAAAAAAAAAFpHAAAAAAAAW0cAAAAAAAAAAAAAW0cAAAAAAABcRwAAAAAAAAAAAABcRwAAAAAAAF1HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUUcAAAAAAABRRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1138,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAF1HAAAAAAAAXkcAAAAAAAAAAAAAXkcAAAAAAABfRwAAAAAAAAAAAABfRwAAAAAAAGBHAAAAAAAAAAAAAGBHAAAAAAAAYUcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXUcAAAAAAABdRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1139,
					1,
					"insert",
					{
						"characters": " actual"
					},
					"BwAAAGFHAAAAAAAAYkcAAAAAAAAAAAAAYkcAAAAAAABjRwAAAAAAAAAAAABjRwAAAAAAAGRHAAAAAAAAAAAAAGRHAAAAAAAAZUcAAAAAAAAAAAAAZUcAAAAAAABmRwAAAAAAAAAAAABmRwAAAAAAAGdHAAAAAAAAAAAAAGdHAAAAAAAAaEcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYUcAAAAAAABhRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1140,
					1,
					"insert",
					{
						"characters": " number"
					},
					"BwAAAGhHAAAAAAAAaUcAAAAAAAAAAAAAaUcAAAAAAABqRwAAAAAAAAAAAABqRwAAAAAAAGtHAAAAAAAAAAAAAGtHAAAAAAAAbEcAAAAAAAAAAAAAbEcAAAAAAABtRwAAAAAAAAAAAABtRwAAAAAAAG5HAAAAAAAAAAAAAG5HAAAAAAAAb0cAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaEcAAAAAAABoRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1141,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAG9HAAAAAAAAcEcAAAAAAAAAAAAAcEcAAAAAAABxRwAAAAAAAAAAAABxRwAAAAAAAHJHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAb0cAAAAAAABvRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1142,
					1,
					"insert",
					{
						"characters": " wavefior"
					},
					"CQAAAHJHAAAAAAAAc0cAAAAAAAAAAAAAc0cAAAAAAAB0RwAAAAAAAAAAAAB0RwAAAAAAAHVHAAAAAAAAAAAAAHVHAAAAAAAAdkcAAAAAAAAAAAAAdkcAAAAAAAB3RwAAAAAAAAAAAAB3RwAAAAAAAHhHAAAAAAAAAAAAAHhHAAAAAAAAeUcAAAAAAAAAAAAAeUcAAAAAAAB6RwAAAAAAAAAAAAB6RwAAAAAAAHtHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAckcAAAAAAAByRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1143,
					3,
					"left_delete",
					null,
					"AwAAAHpHAAAAAAAAekcAAAAAAAABAAAAcnlHAAAAAAAAeUcAAAAAAAABAAAAb3hHAAAAAAAAeEcAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAe0cAAAAAAAB7RwAAAAAAAAAAAAAAAPC/"
				],
				[
					1144,
					1,
					"insert",
					{
						"characters": "orms"
					},
					"BAAAAHhHAAAAAAAAeUcAAAAAAAAAAAAAeUcAAAAAAAB6RwAAAAAAAAAAAAB6RwAAAAAAAHtHAAAAAAAAAAAAAHtHAAAAAAAAfEcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeEcAAAAAAAB4RwAAAAAAAAAAAAAAAPC/"
				],
				[
					1145,
					1,
					"insert",
					{
						"characters": " aqcquire"
					},
					"CQAAAHxHAAAAAAAAfUcAAAAAAAAAAAAAfUcAAAAAAAB+RwAAAAAAAAAAAAB+RwAAAAAAAH9HAAAAAAAAAAAAAH9HAAAAAAAAgEcAAAAAAAAAAAAAgEcAAAAAAACBRwAAAAAAAAAAAACBRwAAAAAAAIJHAAAAAAAAAAAAAIJHAAAAAAAAg0cAAAAAAAAAAAAAg0cAAAAAAACERwAAAAAAAAAAAACERwAAAAAAAIVHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfEcAAAAAAAB8RwAAAAAAAAAAAAAAAPC/"
				],
				[
					1146,
					6,
					"left_delete",
					null,
					"BgAAAIRHAAAAAAAAhEcAAAAAAAABAAAAZYNHAAAAAAAAg0cAAAAAAAABAAAAcoJHAAAAAAAAgkcAAAAAAAABAAAAaYFHAAAAAAAAgUcAAAAAAAABAAAAdYBHAAAAAAAAgEcAAAAAAAABAAAAcX9HAAAAAAAAf0cAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAhUcAAAAAAACFRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1147,
					1,
					"insert",
					{
						"characters": "uired."
					},
					"BgAAAH9HAAAAAAAAgEcAAAAAAAAAAAAAgEcAAAAAAACBRwAAAAAAAAAAAACBRwAAAAAAAIJHAAAAAAAAAAAAAIJHAAAAAAAAg0cAAAAAAAAAAAAAg0cAAAAAAACERwAAAAAAAAAAAACERwAAAAAAAIVHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAf0cAAAAAAAB/RwAAAAAAAAAAAAAAAPC/"
				],
				[
					1149,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAH5HAAAAAAAAf0cAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfkcAAAAAAAB+RwAAAAAAAAAAAAAAAPC/"
				],
				[
					1154,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAHZGAAAAAAAAeUYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAp0YAAAAAAACnRgAAAAAAAAAAAAAAAPC/"
				],
				[
					1159,
					1,
					"insert",
					{
						"characters": "\n//"
					},
					"BAAAAIlHAAAAAAAAikcAAAAAAAAAAAAAikcAAAAAAACWRwAAAAAAAAAAAACWRwAAAAAAAJdHAAAAAAAAAAAAAJdHAAAAAAAAmEcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiUcAAAAAAACJRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1160,
					1,
					"insert",
					{
						"characters": " Specially"
					},
					"CgAAAJhHAAAAAAAAmUcAAAAAAAAAAAAAmUcAAAAAAACaRwAAAAAAAAAAAACaRwAAAAAAAJtHAAAAAAAAAAAAAJtHAAAAAAAAnEcAAAAAAAAAAAAAnEcAAAAAAACdRwAAAAAAAAAAAACdRwAAAAAAAJ5HAAAAAAAAAAAAAJ5HAAAAAAAAn0cAAAAAAAAAAAAAn0cAAAAAAACgRwAAAAAAAAAAAACgRwAAAAAAAKFHAAAAAAAAAAAAAKFHAAAAAAAAokcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmEcAAAAAAACYRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1161,
					1,
					"insert",
					{
						"characters": " because"
					},
					"CAAAAKJHAAAAAAAAo0cAAAAAAAAAAAAAo0cAAAAAAACkRwAAAAAAAAAAAACkRwAAAAAAAKVHAAAAAAAAAAAAAKVHAAAAAAAApkcAAAAAAAAAAAAApkcAAAAAAACnRwAAAAAAAAAAAACnRwAAAAAAAKhHAAAAAAAAAAAAAKhHAAAAAAAAqUcAAAAAAAAAAAAAqUcAAAAAAACqRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAokcAAAAAAACiRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1162,
					1,
					"insert",
					{
						"characters": " I"
					},
					"AgAAAKpHAAAAAAAAq0cAAAAAAAAAAAAAq0cAAAAAAACsRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqkcAAAAAAACqRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1163,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKxHAAAAAAAArUcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArEcAAAAAAACsRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1164,
					2,
					"left_delete",
					null,
					"AgAAAKxHAAAAAAAArEcAAAAAAAABAAAAIKtHAAAAAAAAq0cAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAArUcAAAAAAACtRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1165,
					1,
					"insert",
					{
						"characters": "we"
					},
					"AgAAAKtHAAAAAAAArEcAAAAAAAAAAAAArEcAAAAAAACtRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAq0cAAAAAAACrRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1166,
					1,
					"insert",
					{
						"characters": " cle"
					},
					"BAAAAK1HAAAAAAAArkcAAAAAAAAAAAAArkcAAAAAAACvRwAAAAAAAAAAAACvRwAAAAAAALBHAAAAAAAAAAAAALBHAAAAAAAAsUcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArUcAAAAAAACtRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1167,
					6,
					"left_delete",
					null,
					"BgAAALBHAAAAAAAAsEcAAAAAAAABAAAAZa9HAAAAAAAAr0cAAAAAAAABAAAAbK5HAAAAAAAArkcAAAAAAAABAAAAY61HAAAAAAAArUcAAAAAAAABAAAAIKxHAAAAAAAArEcAAAAAAAABAAAAZatHAAAAAAAAq0cAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAsUcAAAAAAACxRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1168,
					1,
					"insert",
					{
						"characters": "the"
					},
					"AwAAAKtHAAAAAAAArEcAAAAAAAAAAAAArEcAAAAAAACtRwAAAAAAAAAAAACtRwAAAAAAAK5HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAq0cAAAAAAACrRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1169,
					1,
					"insert",
					{
						"characters": " buffer"
					},
					"BwAAAK5HAAAAAAAAr0cAAAAAAAAAAAAAr0cAAAAAAACwRwAAAAAAAAAAAACwRwAAAAAAALFHAAAAAAAAAAAAALFHAAAAAAAAskcAAAAAAAAAAAAAskcAAAAAAACzRwAAAAAAAAAAAACzRwAAAAAAALRHAAAAAAAAAAAAALRHAAAAAAAAtUcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArkcAAAAAAACuRwAAAAAAAAAAAAAAAPC/"
				],
				[
					1170,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAALVHAAAAAAAAtkcAAAAAAAAAAAAAtkcAAAAAAAC3RwAAAAAAAAAAAAC3RwAAAAAAALhHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtUcAAAAAAAC1RwAAAAAAAAAAAAAAAPC/"
				],
				[
					1171,
					1,
					"insert",
					{
						"characters": " cleared."
					},
					"CQAAALhHAAAAAAAAuUcAAAAAAAAAAAAAuUcAAAAAAAC6RwAAAAAAAAAAAAC6RwAAAAAAALtHAAAAAAAAAAAAALtHAAAAAAAAvEcAAAAAAAAAAAAAvEcAAAAAAAC9RwAAAAAAAAAAAAC9RwAAAAAAAL5HAAAAAAAAAAAAAL5HAAAAAAAAv0cAAAAAAAAAAAAAv0cAAAAAAADARwAAAAAAAAAAAADARwAAAAAAAMFHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuEcAAAAAAAC4RwAAAAAAAAAAAAAAAPC/"
				],
				[
					1181,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAY0gAAAAAAABjSAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"redo_stack":
			[
				[
					27,
					1,
					"left_delete",
					null,
					"AQAAALMQAAAAAAAAtBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsxAAAAAAAACzEAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAALQQAAAAAAAAthAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARREAAAAAAABFEQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"paste",
					null,
					"AQAAADsRAAAAAAAAOxEAAAAAAAAMAAAAdG9tbHBsdXNwbHVz",
					"AQAAAAAAAAABAAAARxEAAAAAAABHEQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADkRAAAAAAAAOREAAAAAAAACAAAAICA4EQAAAAAAADgRAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAOxEAAAAAAAA7EQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"cut",
					null,
					"AQAAALYQAAAAAAAAwhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAthAAAAAAAAC2EAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAAF0QAAAAAAAAXhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXRAAAAAAAABdEAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAF4QAAAAAAAAYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARREAAAAAAABFEQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"paste",
					null,
					"AQAAAC0RAAAAAAAALREAAAAAAAAaAAAAc3BkbG9nOjpzcGRsb2dfaGVhZGVyX29ubHk",
					"AQAAAAAAAAABAAAARxEAAAAAAABHEQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACsRAAAAAAAAKxEAAAAAAAACAAAAICAqEQAAAAAAACoRAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAALREAAAAAAAAtEQAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"cut",
					null,
					"AQAAAGAQAAAAAAAAehAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYBAAAAAAAABgEAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "\nPRIVATE"
					},
					"CQAAAEMRAAAAAAAAQxEAAAAAAAABAAAARUIRAAAAAAAAQhEAAAAAAAABAAAAVEERAAAAAAAAQREAAAAAAAABAAAAQUARAAAAAAAAQBEAAAAAAAABAAAAVj8RAAAAAAAAPxEAAAAAAAABAAAAST4RAAAAAAAAPhEAAAAAAAABAAAAUj0RAAAAAAAAPREAAAAAAAABAAAAUDsRAAAAAAAAOxEAAAAAAAACAAAAICA6EQAAAAAAADoRAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAARBEAAAAAAABEEQAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 5078,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "include/sbcqueens-gui/hardware_helpers/GUIManager.hpp",
			"settings":
			{
				"buffer_size": 16753,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BgAAAOI1AAAAAAAA4zUAAAAAAAAAAAAA4zUAAAAAAADvNQAAAAAAAAAAAADvNQAAAAAAAPM1AAAAAAAAAAAAAPM1AAAAAAAA9DUAAAAAAAAAAAAA9DUAAAAAAAAENgAAAAAAAAAAAADjNQAAAAAAAOM1AAAAAAAAEAAAACAgICAgICAgICAgICAgICA",
					"AQAAAAAAAAABAAAA4jUAAAAAAADiNQAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"reindent",
					null,
					"AQAAAOM1AAAAAAAA8zUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4zUAAAAAAADjNQAAAAAAAAAAAAAAAGBA"
				],
				[
					14,
					1,
					"paste",
					null,
					"AQAAAPM1AAAAAAAATDYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8zUAAAAAAADzNQAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "\t\t"
					},
					"AwAAACg2AAAAAAAALDYAAAAAAAAAAAAAUTYAAAAAAABRNgAAAAAAABAAAAAgICAgICAgICAgICAgICAgLDYAAAAAAAAwNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKDYAAAAAAAAoNgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					2,
					"unindent",
					null,
					"AgAAAOM1AAAAAAAA4zUAAAAAAAAEAAAAICAgIOM1AAAAAAAA4zUAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAA+zUAAAAAAAD7NQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "Cuu"
					},
					"AwAAAAk2AAAAAAAACjYAAAAAAAAAAAAACjYAAAAAAAALNgAAAAAAAAAAAAALNgAAAAAAAAw2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACTYAAAAAAAAJNgAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"left_delete",
					null,
					"AQAAAAs2AAAAAAAACzYAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAADDYAAAAAAAAMNgAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "rrent"
					},
					"BQAAAAs2AAAAAAAADDYAAAAAAAAAAAAADDYAAAAAAAANNgAAAAAAAAAAAAANNgAAAAAAAA42AAAAAAAAAAAAAA42AAAAAAAADzYAAAAAAAAAAAAADzYAAAAAAAAQNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACzYAAAAAAAALNgAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABA2AAAAAAAAETYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEDYAAAAAAAAQNgAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "\nstatic"
					},
					"CQAAAOI1AAAAAAAA4zUAAAAAAAAAAAAA4zUAAAAAAADvNQAAAAAAAAAAAADvNQAAAAAAAPM1AAAAAAAAAAAAAPM1AAAAAAAA9DUAAAAAAAAAAAAA9DUAAAAAAAD1NQAAAAAAAAAAAAD1NQAAAAAAAPY1AAAAAAAAAAAAAPY1AAAAAAAA9zUAAAAAAAAAAAAA9zUAAAAAAAD4NQAAAAAAAAAAAAD4NQAAAAAAAPk1AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4jUAAAAAAADiNQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPk1AAAAAAAA+jUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+TUAAAAAAAD5NQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"paste",
					null,
					"AgAAAPM1AAAAAAAAKjYAAAAAAAAAAAAAKjYAAAAAAAAqNgAAAAAAAAcAAABzdGF0aWMg",
					"AQAAAAAAAAABAAAA+jUAAAAAAADzNQAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "curr"
					},
					"BQAAAAY2AAAAAAAABzYAAAAAAAAAAAAABzYAAAAAAAAHNgAAAAAAAAMAAABydGQHNgAAAAAAAAg2AAAAAAAAAAAAAAg2AAAAAAAACTYAAAAAAAAAAAAACTYAAAAAAAAKNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACTYAAAAAAAAGNgAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"paste",
					null,
					"AgAAAHo2AAAAAAAAiTYAAAAAAAAAAAAAiTYAAAAAAACJNgAAAAAAAA4AAABydGRfc2NhbGVfYXhpcw",
					"AQAAAAAAAAABAAAAejYAAAAAAACINgAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAFU3AAAAAAAAVjcAAAAAAAAAAAAAVjcAAAAAAABqNwAAAAAAAAAAAABWNwAAAAAAAFY3AAAAAAAAFAAAACAgICAgICAgICAgICAgICAgICAgVjcAAAAAAABmNwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVTcAAAAAAABVNwAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"paste",
					null,
					"AQAAAGY3AAAAAAAAmDcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZjcAAAAAAABmNwAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAGY3AAAAAAAAajcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZjcAAAAAAABmNwAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"left_delete",
					null,
					"AQAAAIk3AAAAAAAAiTcAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAijcAAAAAAACKNwAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "@"
					},
					"AQAAAIk3AAAAAAAAijcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiTcAAAAAAACJNwAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"left_delete",
					null,
					"AQAAAIk3AAAAAAAAiTcAAAAAAAABAAAAQA",
					"AQAAAAAAAAABAAAAijcAAAAAAACKNwAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAIk3AAAAAAAAijcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiTcAAAAAAACJNwAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"cut",
					null,
					"AQAAAGo3AAAAAAAAajcAAAAAAAAyAAAASW1QbG90OjpTZXR1cEF4aXNTY2FsZShJbUF4aXNfWTIsIHJ0ZF9zY2FsZV9heGlzKTs",
					"AQAAAAAAAAABAAAAnDcAAAAAAABqNwAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAFY3AAAAAAAAVjcAAAAAAAAUAAAAICAgICAgICAgICAgICAgICAgICA",
					"AQAAAAAAAAABAAAAajcAAAAAAABqNwAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAJY4AAAAAAAAlzgAAAAAAAAAAAAAlzgAAAAAAACzOAAAAAAAAAAAAACXOAAAAAAAAJc4AAAAAAAAHAAAACAgICAgICAgICAgICAgICAgICAgICAgICAgICCXOAAAAAAAAKs4AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAljgAAAAAAACWOAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"paste",
					null,
					"AQAAAKs4AAAAAAAA3TgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqzgAAAAAAACrOAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"left_delete",
					null,
					"AQAAAFU3AAAAAAAAVTcAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAVjcAAAAAAABWNwAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAVTcAAAAAAABVNwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "include/sbcqueens-gui/hardware_helpers/TeensyControllerInterface.hpp",
			"settings":
			{
				"buffer_size": 29331,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOJOAAAAAAAA404AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4k4AAAAAAADiTgAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"paste",
					null,
					"AQAAAONOAAAAAAAA6U4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA404AAAAAAADjTgAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAOJOAAAAAAAA404AAAAAAAAAAAAA404AAAAAAADkTgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4k4AAAAAAADiTgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGlOAAAAAAAAak4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaU4AAAAAAABpTgAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"reindent",
					null,
					"AQAAAGpOAAAAAAAAek4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAak4AAAAAAABqTgAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAHpOAAAAAAAAe04AAAAAAAAAAAAAe04AAAAAAAB8TgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAek4AAAAAAAB6TgAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " setpoint"
					},
					"CQAAAHxOAAAAAAAAfU4AAAAAAAAAAAAAfU4AAAAAAAB+TgAAAAAAAAAAAAB+TgAAAAAAAH9OAAAAAAAAAAAAAH9OAAAAAAAAgE4AAAAAAAAAAAAAgE4AAAAAAACBTgAAAAAAAAAAAACBTgAAAAAAAIJOAAAAAAAAAAAAAIJOAAAAAAAAg04AAAAAAAAAAAAAg04AAAAAAACETgAAAAAAAAAAAACETgAAAAAAAIVOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfE4AAAAAAAB8TgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAIVOAAAAAAAAhk4AAAAAAAAAAAAAhk4AAAAAAACHTgAAAAAAAAAAAACHTgAAAAAAAIhOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhU4AAAAAAACFTgAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAIhOAAAAAAAAiU4AAAAAAAAAAAAAiU4AAAAAAACKTgAAAAAAAAAAAACKTgAAAAAAAItOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiE4AAAAAAACITgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " degC"
					},
					"BQAAAItOAAAAAAAAjE4AAAAAAAAAAAAAjE4AAAAAAACNTgAAAAAAAAAAAACNTgAAAAAAAI5OAAAAAAAAAAAAAI5OAAAAAAAAj04AAAAAAAAAAAAAj04AAAAAAACQTgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAi04AAAAAAACLTgAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAAJBOAAAAAAAAkU4AAAAAAAAAAAAAkU4AAAAAAACSTgAAAAAAAAAAAACSTgAAAAAAAJNOAAAAAAAAAAAAAJNOAAAAAAAAlE4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkE4AAAAAAACQTgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " RTDs"
					},
					"BQAAAJROAAAAAAAAlU4AAAAAAAAAAAAAlU4AAAAAAACWTgAAAAAAAAAAAACWTgAAAAAAAJdOAAAAAAAAAAAAAJdOAAAAAAAAmE4AAAAAAAAAAAAAmE4AAAAAAACZTgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlE4AAAAAAACUTgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAJlOAAAAAAAAmk4AAAAAAAAAAAAAmk4AAAAAAACbTgAAAAAAAAAAAACbTgAAAAAAAJxOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmU4AAAAAAACZTgAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " K"
					},
					"AgAAAJxOAAAAAAAAnU4AAAAAAAAAAAAAnU4AAAAAAACeTgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnE4AAAAAAACcTgAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAABdPAAAAAAAAF08AAAAAAAAJAAAAICsgMjczLjE1",
					"AQAAAAAAAAABAAAAF08AAAAAAAAgTwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					2,
					"left_delete",
					null,
					"AgAAAGpOAAAAAAAAak4AAAAAAAA0AAAAICAgICAgICAgICAgICAgIC8vIHNldHBvaW50IGlzIGluIGRlZ0MgYW5kIFJURHMgaW4gS2lOAAAAAAAAaU4AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAnk4AAAAAAABqTgAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "mean"
					},
					"BQAAAGpPAAAAAAAAa08AAAAAAAAAAAAAa08AAAAAAABrTwAAAAAAAAYAAABzdGRkZXZrTwAAAAAAAGxPAAAAAAAAAAAAAGxPAAAAAAAAbU8AAAAAAAAAAAAAbU8AAAAAAABuTwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAak8AAAAAAABwTwAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAbk8AAAAAAABuTwAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAOJOAAAAAAAA404AAAAAAAAAAAAA404AAAAAAADkTgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4k4AAAAAAADiTgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " 273.15"
					},
					"BwAAAOROAAAAAAAA5U4AAAAAAAAAAAAA5U4AAAAAAADmTgAAAAAAAAAAAADmTgAAAAAAAOdOAAAAAAAAAAAAAOdOAAAAAAAA6E4AAAAAAAAAAAAA6E4AAAAAAADpTgAAAAAAAAAAAADpTgAAAAAAAOpOAAAAAAAAAAAAAOpOAAAAAAAA604AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5E4AAAAAAADkTgAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAVk4AAAAAAABWTgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "test/source/gui_test.cpp",
			"settings":
			{
				"buffer_size": 1525,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					23,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD/BQAALy8gQyBTVEQgaW5jbHVkZXMKLy8gQyAzcmQgcGFydHkgaW5jbHVkZXMKLy8gQysrIFNURCBpbmNsdWRlCi8vIEMrKyAzcmQgcGFydHkgaW5jbHVkZXMKI2luY2x1ZGUgPGRvY3Rlc3QvZG9jdGVzdC5oPgoKI2luY2x1ZGUgPGNocm9ubz4KI2luY2x1ZGUgPHRocmVhZD4KI2luY2x1ZGUgPG9wdGlvbmFsPgojaW5jbHVkZSA8aW9zdHJlYW0+CiNpbmNsdWRlIDxtZW1vcnk+CgojaW5jbHVkZSAic2JjcXVlZW5zLWd1aS9oYXJkd2FyZV9oZWxwZXJzL0NsaWVudENvbnRyb2xsZXIuaHBwIgoKVEVTVF9DQVNFKCJHVUlfVEVTVCIpIHsKCiAgICBTQkNRdWVlbnM6OkNsaWVudENvbnRyb2xsZXI8c3RkOjp1bmlxdWVfcHRyPGludD4sIGRvdWJsZT4gZmFrZV9wb3J0KCJ0ZXN0Iik7CgogICAgZmFrZV9wb3J0LmluaXQoCiAgICBbXShzdGQ6OnVuaXF1ZV9wdHI8aW50PiYgaSkgLT4gYm9vbHsKICAgICAgICBpLnJlc2V0KG5ldyBpbnQpOwogICAgICAgICppID0gMjsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0sIFtdKHN0ZDo6dW5pcXVlX3B0cjxpbnQ+JiBpKSAtPiBib29sIHsKICAgICAgICBpLnJlbGVhc2UoKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0pOwoKICAgIGZha2VfcG9ydC5hc3luY19nZXQoW10oc3RkOjp1bmlxdWVfcHRyPGludD4mIGkpIC0+IHN0ZDo6b3B0aW9uYWw8ZG91YmxlPiB7CiAgICAgICAgKmkgPSA0MjsKCiAgICAgICAgc3RkOjp0aGlzX3RocmVhZDo6c2xlZXBfZm9yKHN0ZDo6Y2hyb25vOjpzZWNvbmRzKDEpKTsKCiAgICAgICAgcmV0dXJuIHN0ZDo6bWFrZV9vcHRpb25hbChzdGF0aWNfY2FzdDxkb3VibGU+KCppKSk7CiAgICB9KTsKCiAgICBzdGQ6OnRoaXNfdGhyZWFkOjpzbGVlcF9mb3Ioc3RkOjpjaHJvbm86Om1pbGxpc2Vjb25kcygyKSk7CgogICAgZmFrZV9wb3J0LmFzeW5jX2dldChbXShzdGQ6OnVuaXF1ZV9wdHI8aW50PiYgaSkgLT4gc3RkOjpvcHRpb25hbDxkb3VibGU+IHsKICAgICAgICAqaSA9IDY5OwoKICAgICAgICBzdGQ6OnRoaXNfdGhyZWFkOjpzbGVlcF9mb3Ioc3RkOjpjaHJvbm86OnNlY29uZHMoMSkpOwoKICAgICAgICByZXR1cm4gc3RkOjptYWtlX29wdGlvbmFsKHN0YXRpY19jYXN0PGRvdWJsZT4oKmkpKTsKICAgIH0pOwoKICAgIHN0ZDo6dGhpc190aHJlYWQ6OnNsZWVwX2ZvcihzdGQ6OmNocm9ubzo6bWlsbGlzZWNvbmRzKDUwMCkpOwoKICAgIGF1dG8gb3V0cHV0ID0gZmFrZV9wb3J0LmFzeW5jX2dldF92YWx1ZXMoKTsKICAgIGZvcihhdXRvIHggOiBvdXRwdXQpIHsKICAgICAgICBzdGQ6OmNvdXQgPDwgeCA8PCBzdGQ6OmVuZGw7CiAgICB9CgogICAgc3RkOjp0aGlzX3RocmVhZDo6c2xlZXBfZm9yKHN0ZDo6Y2hyb25vOjptaWxsaXNlY29uZHMoMykpOwoKICAgIHN0ZDo6Y291dCA8PCAiV2Ugd2FpdGVkLi4uIiA8PCBzdGQ6OmVuZGw7CiAgICBvdXRwdXQgPSBmYWtlX3BvcnQuYXN5bmNfZ2V0X3ZhbHVlcygpOwogICAgZm9yKGF1dG8geCA6IG91dHB1dCkgewogICAgICAgIHN0ZDo6Y291dCA8PCB4IDw8IHN0ZDo6ZW5kbDsKICAgIH0KCn0AAAAAAAAAAPUFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowUAAAAAAACzBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "include/sbcqueens-gui/hardware_helpers/ClientController.hpp",
			"settings":
			{
				"buffer_size": 5744,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAANgLAAAAAAAA2QsAAAAAAAAAAAAA2QsAAAAAAADdCwAAAAAAAAAAAADdCwAAAAAAAOELAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AsAAAAAAADYCwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"paste",
					null,
					"AQAAAOELAAAAAAAABQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QsAAAAAAADhCwAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAG0IAAAAAAAAbggAAAAAAAAAAAAAbggAAAAAAAByCAAAAAAAAAAAAAByCAAAAAAAAHYIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQgAAAAAAABtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"paste",
					null,
					"AQAAAHYIAAAAAAAAmggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdggAAAAAAAB2CAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"left_delete",
					null,
					"AQAAAIMTAAAAAAAAgxMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAhBMAAAAAAACEEwAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFMTAAAAAAAAVBMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUxMAAAAAAABTEwAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGATAAAAAAAAYRMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYBMAAAAAAABgEwAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAFMTAAAAAAAAUxMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAYRMAAAAAAABhEwAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"paste",
					null,
					"AgAAAKATAAAAAAAAqhMAAAAAAAAAAAAAqhMAAAAAAACqEwAAAAAAAAYAAABvdXRbaV0",
					"AQAAAAAAAAABAAAAoBMAAAAAAACmEwAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"left_delete",
					null,
					"AQAAAEwTAAAAAAAATBMAAAAAAAAEAAAAc2l6ZQ",
					"AQAAAAAAAAABAAAATBMAAAAAAABQEwAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					2,
					"left_delete",
					null,
					"AgAAAEwTAAAAAAAATBMAAAAAAAABAAAAKUsTAAAAAAAASxMAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAATRMAAAAAAABNEwAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "\nout.pi"
					},
					"CAAAAKYTAAAAAAAApxMAAAAAAAAAAAAApxMAAAAAAACzEwAAAAAAAAAAAACzEwAAAAAAALQTAAAAAAAAAAAAALQTAAAAAAAAtRMAAAAAAAAAAAAAtRMAAAAAAAC2EwAAAAAAAAAAAAC2EwAAAAAAALcTAAAAAAAAAAAAALcTAAAAAAAAuBMAAAAAAAAAAAAAuBMAAAAAAAC5EwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAphMAAAAAAACmEwAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"left_delete",
					null,
					"AQAAALgTAAAAAAAAuBMAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAuRMAAAAAAAC5EwAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "us"
					},
					"AgAAALgTAAAAAAAAuRMAAAAAAAAAAAAAuRMAAAAAAAC6EwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuBMAAAAAAAC4EwAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"clangd\",\"item\":{\"insertTextFormat\":2,\"detail\":\"[2 overloads]\",\"filterText\":\"push_back\",\"label\":\" push_back(…)\",\"textEdit\":{\"range\":{\"end\":{\"character\":16,\"line\":163},\"start\":{\"character\":16,\"line\":163}},\"newText\":\"push_back($0)\"},\"kind\":2,\"score\":9.680000305175781,\"insertText\":\"push_back($0)\",\"sortText\":\"3ee51eb8push_back\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							41,
							84,
							6
						],
						"trigger": "push_back"
					},
					"BgAAALkTAAAAAAAAuRMAAAAAAAABAAAAc7gTAAAAAAAAuBMAAAAAAAABAAAAdbgTAAAAAAAAuRMAAAAAAAAAAAAAuBMAAAAAAAC4EwAAAAAAAAEAAABptxMAAAAAAAC3EwAAAAAAAAEAAABwtxMAAAAAAADCEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuhMAAAAAAAC6EwAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "out"
					},
					"AwAAAMETAAAAAAAAwhMAAAAAAAAAAAAAwhMAAAAAAADDEwAAAAAAAAAAAADDEwAAAAAAAMQTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwRMAAAAAAADBEwAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAMQTAAAAAAAAxRMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxBMAAAAAAADEEwAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"clangd\",\"item\":{\"insertTextFormat\":2,\"detail\":\"T\",\"filterText\":\"out_single\",\"label\":\" out_single\",\"textEdit\":{\"range\":{\"end\":{\"character\":29,\"line\":163},\"start\":{\"character\":26,\"line\":163}},\"newText\":\"out_single\"},\"kind\":6,\"score\":44.318382263183594,\"insertText\":\"out_single\",\"sortText\":\"3dceb9faout_single\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							45,
							88,
							3
						],
						"trigger": "out_single"
					},
					"AwAAAMQTAAAAAAAAxBMAAAAAAAABAAAAX8ETAAAAAAAAwRMAAAAAAAADAAAAb3V0wRMAAAAAAADLEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxRMAAAAAAADFEwAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMwTAAAAAAAAzRMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzBMAAAAAAADMEwAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"paste",
					null,
					"AgAAAE0PAAAAAAAAXQ8AAAAAAAAAAAAAXQ8AAAAAAABdDwAAAAAAAAIAAAB7fQ",
					"AQAAAAAAAAABAAAATw8AAAAAAABNDwAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAF0PAAAAAAAAXw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQ8AAAAAAABdDwAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAqFAAAI2lmbmRlZiBDTElFTlRDT05UUk9MTEVSX0gKI2RlZmluZSBDTElFTlRDT05UUk9MTEVSX0gKI2luY2x1ZGUgPHV0aWxpdHk+CiNpbmNsdWRlIDx2ZWN0b3I+CiNwcmFnbWEgb25jZQoKLyoKICAgIFRoaXMgZmlsZSBpcyBtZWFudCB0byBjcmVhdGUgYSBtb25hZC9pbnRlcmZhY2UgdGhhdCB3cmFwcyBhIGxvdCBvZiBjb21tb24KICAgIGxvZ2ljIGJldHdlZW4gYSBzZXJ2ZXIvbWFzdGVyIGFuZCBjbGllbnQvYWdlbnQuIFRoZSBtYWluIGFzc3VtcHRpb24KICAgIGlzIHRoYXQgdGhlIGNsaWVudCBpcyBzbG93IChPKDEwMG1zKSBvciBoaWdoZXIpLCBoYXMgYW4gaW5pdGlhbGl6YXRpb24KICAgIHBoYXNlIGFuZCBkb2VzIG5vdCBzZW5kIGFueSBjb21tYW5kcyB0byB0aGUgbWFzdGVyOiBpdCBvbmx5IHNlbmRzIHJlc3BvbnNlcy4KCiAgICBFeGFtcGxlOiBhIHByZXNzdXJlIHRyYW5zZHVjZXIgd2hpY2ggaGFzIGEgc2V0dXAgcGhhc2UgdGhlbiBhbGwgaXQgd2lsbAogICAgZXZlciBkbyBpcyB0byByZXBseSB3aXRoIG1lc3NhZ2VzIChhZnRlciB0aGUgc2VydmVyIGFzayBmb3IgaXQpIHdpdGggdGhlCiAgICBsYXRlc3QgcHJlc3N1cmUgdHJhbnNkdWNlciwgYW5kIG9jY2FzaW9uYWxseSBpZiB0aGUgc2VydmVyIGRlc2lyZXMKICAgIHRvIGNoYW5nZSBpdHMgc2V0dXAuCgogICAgRm9yIGZhc3QgYW5kIGNvbXBsaWNhdGVkIHNldHVwcyAoc2V2ZXJhbCBzdGVwcywgZmVlZGJhY2sgaXMgbmVlZGVkIG9yCiAgICBmYXN0ZXIgYWNxdWlzaXRpb24gdGltZXMpIHdyaXRlIGEgc3BlY2lhbGl6ZWQgY29kZQoqLwoKLy8gQyBTVEQgaW5jbHVkZXMKLy8gQyAzcmQgcGFydHkgaW5jbHVkZXMKLy8gQysrIFNURCBpbmNsdWRlcwojaW5jbHVkZSA8ZnVuY3Rpb25hbD4KI2luY2x1ZGUgPG1lbW9yeT4KI2luY2x1ZGUgPG9wdGlvbmFsPgojaW5jbHVkZSA8c3RyaW5nPgojaW5jbHVkZSA8bXV0ZXg+CiNpbmNsdWRlIDxmdXR1cmU+CiNpbmNsdWRlIDx0aHJlYWQ+CgovLyBDKysgM3JkIHBhcnR5IGluY2x1ZGVzCiNpbmNsdWRlIDxzcGRsb2cvc3BkbG9nLmg+CiNpbmNsdWRlIDxyZWFkZXJ3cml0ZXJxdWV1ZS5oPgovLyBteSBpbmNsdWRlcwoKbmFtZXNwYWNlIFNCQ1F1ZWVucyB7Cgp0ZW1wbGF0ZTx0eXBlbmFtZSBQb3J0LCB0eXBlbmFtZSBUPgpjbGFzcyBDbGllbnRDb250cm9sbGVyIHsKIHB1YmxpYzoKICAgIHVzaW5nIHJldHVybl90eXBlID0gVDsKICAgIHVzaW5nIHF1ZXVlX3R5cGUgPSBtb29keWNhbWVsOjpSZWFkZXJXcml0ZXJRdWV1ZTxUPjsKICAgIC8vIEluaXRpYWxpemF0aW9uIGZ1bmN0aW9uIHR5cGUgdG8gb3BlbiB0aGUgcG9ydAogICAgdXNpbmcgQ29udHJvbEZ1bmNUeXBlID0gc3RkOjpmdW5jdGlvbjxib29sKFBvcnQmKT47CiAgICAvLyBSZXR1cm4gZnVuY3Rpb24gdHlwZSB0byByZXRyaWV2ZSB0aGUgZGF0YSBmcm9tIHRoZSBwb3J0LgogICAgLy8gUmV0dXJuIG11c3QgYmUgb3B0aW9uYWwgb2YgUmV0dXJuVHlwZQogICAgdXNpbmcgUmV0dXJuRnVuY1R5cGUgPSBzdGQ6OmZ1bmN0aW9uPHN0ZDo6b3B0aW9uYWw8VD4oUG9ydCYpPjsKCiBwcml2YXRlOgogICAgUG9ydCBfcG9ydDsKICAgIHN0ZDo6c3RyaW5nIF9uYW1lOwogICAgQ29udHJvbEZ1bmNUeXBlIF9pbml0X2Z1bmM7CiAgICBDb250cm9sRnVuY1R5cGUgX2Nsb3NlX2Z1bmM7CgogICAgcXVldWVfdHlwZSBfcTsKICAgIG11dGFibGUgc3RkOjptdXRleCBfcG9ydF9tdXRleDsKCiBwdWJsaWM6CiAgICBleHBsaWNpdCBDbGllbnRDb250cm9sbGVyKGNvbnN0IHN0ZDo6c3RyaW5nJiBuYW1lKSA6IF9uYW1lKG5hbWUpIHt9CiAgICBDbGllbnRDb250cm9sbGVyKGNvbnN0IHN0ZDo6c3RyaW5nJiBuYW1lLCBDb250cm9sRnVuY1R5cGUmJiBpbml0LAogICAgICAgIENvbnRyb2xGdW5jVHlwZSYmIGNsb3NlKQogICAgICAgIDogX25hbWUobmFtZSksIF9pbml0X2Z1bmMoaW5pdCksIF9jbG9zZV9mdW5jKGNsb3NlKSwgX3EoMTAwKSB7fQoKICAgIC8vIE1vdmluZyBhbGxvd2VkCiAgICBDbGllbnRDb250cm9sbGVyKENsaWVudENvbnRyb2xsZXImJikgPSBkZWZhdWx0OwogICAgLy8gTm8gY29weWluZwogICAgQ2xpZW50Q29udHJvbGxlcihjb25zdCBDbGllbnRDb250cm9sbGVyJikgPSBkZWxldGU7CgogICAgfkNsaWVudENvbnRyb2xsZXIoKSB7CiAgICAgICAgc3RkOjpzY29wZWRfbG9jayBndWFyZChfcG9ydF9tdXRleCk7CiAgICAgICAgX2Nsb3NlX2Z1bmMoX3BvcnQpOwogICAgfQoKICAgIC8vIFNldHMgdGhlIGluaXQgYW5kIGNsb3NlIGZ1bmN0aW9uLgogICAgdm9pZCBidWlsZChDb250cm9sRnVuY1R5cGUmJiBpbml0LCBDb250cm9sRnVuY1R5cGUmJiBjbG9zZSkgbm9leGNlcHQgewogICAgICAgIF9pbml0X2Z1bmMgPSBpbml0OwogICAgICAgIF9jbG9zZV9mdW5jID0gY2xvc2U7CiAgICB9CgogICAgLy8gQnVpbGRzIGFuZCBpbml0aWFsaXplcyB0aGUgcG9ydAogICAgdm9pZCBpbml0KENvbnRyb2xGdW5jVHlwZSYmIGluaXQsIENvbnRyb2xGdW5jVHlwZSYmIGNsb3NlKSBub2V4Y2VwdCB7CiAgICAgICAgX2luaXRfZnVuYyA9IGluaXQ7CiAgICAgICAgX2Nsb3NlX2Z1bmMgPSBjbG9zZTsKCiAgICAgICAgaWYgKCFfcG9ydCkgewogICAgICAgICAgICBib29sIHN1Y2Nlc3MgPSBfaW5pdF9mdW5jKF9wb3J0KTsKCiAgICAgICAgICAgIGlmICghc3VjY2VzcykgewogICAgICAgICAgICAgICAgc3BkbG9nOjplcnJvcigiRmFpbGVkIHRvIG9wZW4gcG9ydCB1bmRlciBjb250cm9sbGVyIG5hbWUgezB9IiwKICAgICAgICAgICAgICAgICAgICBfbmFtZSk7CgogICAgICAgICAgICAgICAgLy8gU29tZXRpbWVzIHRoZSBsb2dpYyBpbnNpZGUgaW5pdCB3b3VsZCBub3QgY2xvc2UgdGhlCiAgICAgICAgICAgICAgICAvLyBwb3J0LCBzbyB3ZSBjbG9zZSBpdCBoZXJlLgogICAgICAgICAgICAgICAgX2Nsb3NlX2Z1bmMoX3BvcnQpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIC8vIEZvcmNlcyB0byBjbG9zZS4KICAgIC8vIFRoZSBkZWNvbnN0cnVjdG9yIGFsc28gY2FsbHMgdGhpcyBmdW5jdGlvbgogICAgdm9pZCBjbG9zZSgpIG5vZXhjZXB0IHsKICAgICAgICBzdGQ6OnNjb3BlZF9sb2NrIGd1YXJkKF9wb3J0X211dGV4KTsKICAgICAgICBfY2xvc2VfZnVuYyhfcG9ydCk7CiAgICB9CgogICAgLy8gSG9sZHMgdGhlIGVudGlyZSBsb2dpYyB0byBjb25uZWN0IHRvIHRoZSBwb3J0IGFuZCByZXRyaWV2ZSB0aGUgZGF0YS4KICAgIC8vIEEgZm9ybSBvZiAibGF6eSBldmFsdWF0aW9uIiBsZWF2aW5nIHRoZSBjb25uZWN0aW9uIHRvIHRoZSBwb3J0CiAgICAvLyB1bnRpbCByZXF1aXJlZC4gVGhlIGNvZGUgcmV0dXJucyBhbiBvcHRpb25hbCB0byBkZWFsIGluIHRoZSBjYXNlIHRoZQogICAgLy8gcG9ydCB3YXMgbm90IG9wZW4gb3IgYW4gZXJyb3Igb2NjdXIuCiAgICBzdGQ6Om9wdGlvbmFsPFQ+IGdldChSZXR1cm5GdW5jVHlwZSYmIGcpIG5vZXhjZXB0IHsKICAgICAgICBpZiAoX3BvcnQpIHsKICAgICAgICAgICAgcmV0dXJuIGcoX3BvcnQpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGJvb2wgc3VjY2VzcyA9IF9pbml0X2Z1bmMoX3BvcnQpOwoKICAgICAgICAgICAgaWYgKCFzdWNjZXNzKSB7CiAgICAgICAgICAgICAgICBzcGRsb2c6OmVycm9yKCJGYWlsZWQgdG8gb3BlbiBwb3J0IHVuZGVyIGNvbnRyb2xsZXIgbmFtZSB7MH0iLAogICAgICAgICAgICAgICAgICAgIF9uYW1lKTsKCiAgICAgICAgICAgICAgICAvLyBTb21ldGltZXMgdGhlIGxvZ2ljIGluc2lkZSBpbml0IHdvdWxkIG5vdCBjbG9zZSB0aGUKICAgICAgICAgICAgICAgIC8vIHBvcnQsIHNvIHdlIGNsb3NlIGl0IGhlcmUuCiAgICAgICAgICAgICAgICBfY2xvc2VfZnVuYyhfcG9ydCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBzdGQ6Om9wdGlvbmFsPFQ+KCk7ICAvLyByZXR1cm5zIGFuIGVtcHR5IG9wdGlvbmFsCiAgICAgICAgfQogICAgfQoKICAgIC8vIEhvbGRzIHRoZSBlbnRpcmUgbG9naWMgdG8gY29ubmVjdCB0byB0aGUgcG9ydCBhbmQgcmV0cmlldmUgdGhlIGRhdGEuCiAgICAvLyBBIGZvcm0gb2YgImxhenkgZXZhbHVhdGlvbiIgbGVhdmluZyB0aGUgY29ubmVjdGlvbiB0byB0aGUgcG9ydAogICAgLy8gdW50aWwgcmVxdWlyZWQuIFRoZSBjb2RlIHJldHVybnMgYW4gb3B0aW9uYWwgdG8gZGVhbCBpbiB0aGUgY2FzZSB0aGUKICAgIC8vIHBvcnQgd2FzIG5vdCBvcGVuIG9yIGFuIGVycm9yIG9jY3VyLgogICAgc3RkOjpvcHRpb25hbDxUPiBvcGVyYXRvcigpKFJldHVybkZ1bmNUeXBlJiYgZykgbm9leGNlcHQgewogICAgICAgIHJldHVybiBnZXQoc3RkOjpmb3J3YXJkPFJldHVybkZ1bmNUeXBlPihnKSk7CiAgICB9CgogICAgdm9pZCBhc3luY19nZXQoUmV0dXJuRnVuY1R5cGUmJiBnKSBub2V4Y2VwdCB7CiAgICAgICAgc3RkOjp0aHJlYWQgYXN5bmNfdGFzaygKICAgICAgICAgICAgWyZdKCkgewogICAgICAgICAgICAgICAgc3RkOjpzY29wZWRfbG9jayBndWFyZChfcG9ydF9tdXRleCk7CiAgICAgICAgICAgICAgICBzdGQ6Om9wdGlvbmFsPFQ+IG91dCA9IGdldChzdGQ6OmZvcndhcmQ8UmV0dXJuRnVuY1R5cGU+KGcpKTsKICAgICAgICAgICAgICAgIGlmIChvdXQuaGFzX3ZhbHVlKCkpIHsKICAgICAgICAgICAgICAgICAgICBfcS50cnlfZW5xdWV1ZShvdXQudmFsdWUoKSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgfSk7CgogICAgICAgIGFzeW5jX3Rhc2suZGV0YWNoKCk7CiAgICB9CgogICAgc3RkOjp2ZWN0b3I8VD4gYXN5bmNfZ2V0X3ZhbHVlcygpIG5vZXhjZXB0IHsKICAgICAgICBhdXRvIHNpemUgPSBfcS5zaXplX2FwcHJveCgpOwoKICAgICAgICBpZiAoc2l6ZSA9PSAwKSB7CiAgICAgICAgICAgIHJldHVybiB7fTsKICAgICAgICB9CgogICAgICAgIFQgb3V0X3NpbmdsZTsKICAgICAgICBzdGQ6OnZlY3RvcjxUPiBvdXQ7CgogICAgICAgIGZvciAoc3RkOjpzaXplX3QgaSA9IDA7IGkgPCBzaXplOyBpKyspIHsKICAgICAgICAgICAgX3EudHJ5X2RlcXVldWUob3V0X3NpbmdsZSk7CiAgICAgICAgICAgIG91dC5wdXNoX2JhY2sob3V0X3NpbmdsZSk7CiAgICAgICAgfQoKCiAgICAgICAgcmV0dXJuIG91dDsKICAgIH0KfTsKCn0gIC8vIG5hbWVzcGFjZSBTQkNRdWVlbnMKCiNlbmRpZgoAAAAAAAAAACoUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFBEAAAAAAAAUEQAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					2,
					"left_delete",
					null,
					"AgAAADsSAAAAAAAAOxIAAAAAAAALAAAAdHJ5X2VucXVldWU6EgAAAAAAADoSAAAAAAAAAQAAAC4",
					"AQAAAAAAAAABAAAAOxIAAAAAAABGEgAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAADoSAAAAAAAAOxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhIAAAAAAAA6EgAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"clangd\",\"item\":{\"insertTextFormat\":2,\"detail\":\"[2 overloads]\",\"filterText\":\"enqueue\",\"label\":\" enqueue(…)\",\"textEdit\":{\"range\":{\"end\":{\"character\":23,\"line\":144},\"start\":{\"character\":23,\"line\":144}},\"newText\":\"enqueue\"},\"kind\":2,\"score\":9.680000305175781,\"insertText\":\"enqueue\",\"sortText\":\"3ee51eb8enqueue\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": true,
						"query_change_id":
						[
							80,
							169,
							1
						],
						"trigger": "enqueue"
					},
					"AQAAADsSAAAAAAAAQhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxIAAAAAAAA7EgAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"left_delete",
					null,
					"AQAAAOQTAAAAAAAA5BMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA5RMAAAAAAADlEwAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAK8RAAAAAAAAsBEAAAAAAAAAAAAAsBEAAAAAAADAEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxEAAAAAAACvEQAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"paste",
					null,
					"AQAAAMARAAAAAAAAsBMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwBEAAAAAAADAEQAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					2,
					"indent",
					null,
					"GAAAANURAAAAAAAA2REAAAAAAAAAAAAA9hEAAAAAAAD6EQAAAAAAAAAAAAALEgAAAAAAAA8SAAAAAAAAAAAAAD4SAAAAAAAAQhIAAAAAAAAAAAAAXhIAAAAAAABiEgAAAAAAAAAAAACxEgAAAAAAALUSAAAAAAAAAAAAANISAAAAAAAA1hIAAAAAAAAAAAAAHRMAAAAAAAAhEwAAAAAAAAAAAABPEwAAAAAAAFMTAAAAAAAAAAAAAHcTAAAAAAAAexMAAAAAAAAAAAAAihMAAAAAAACOEwAAAAAAAAAAAADTEwAAAAAAANcTAAAAAAAAAAAAANURAAAAAAAA2REAAAAAAAAAAAAA+hEAAAAAAAD+EQAAAAAAAAAAAAATEgAAAAAAABcSAAAAAAAAAAAAAEoSAAAAAAAAThIAAAAAAAAAAAAAbhIAAAAAAAByEgAAAAAAAAAAAADFEgAAAAAAAMkSAAAAAAAAAAAAAOoSAAAAAAAA7hIAAAAAAAAAAAAAORMAAAAAAAA9EwAAAAAAAAAAAABvEwAAAAAAAHMTAAAAAAAAAAAAAJsTAAAAAAAAnxMAAAAAAAAAAAAAshMAAAAAAAC2EwAAAAAAAAAAAAD/EwAAAAAAAAMUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsBMAAAAAAADVEQAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					2,
					"unindent",
					null,
					"AgAAALARAAAAAAAAsBEAAAAAAAAEAAAAICAgILARAAAAAAAAsBEAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAyBEAAAAAAADIEQAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAK8RAAAAAAAAsBEAAAAAAAAAAAAAsBEAAAAAAADAEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxEAAAAAAACvEQAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"paste",
					null,
					"AQAAAMARAAAAAAAA1BEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwBEAAAAAAADAEQAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANQRAAAAAAAA1REAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BEAAAAAAADUEQAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": "out"
					},
					"BAAAAAcSAAAAAAAACBIAAAAAAAAAAAAACBIAAAAAAAAIEgAAAAAAAAYAAAByZXR1cm4IEgAAAAAAAAkSAAAAAAAAAAAAAAkSAAAAAAAAChIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABxIAAAAAAAANEgAAAAAAAAAAAAAAAPC/"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAoSAAAAAAAACxIAAAAAAAAAAAAACxIAAAAAAAAMEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAChIAAAAAAAAKEgAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANURAAAAAAAA1hEAAAAAAAAAAAAA1hEAAAAAAADmEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1REAAAAAAADVEQAAAAAAAAAAAAAAAPC/"
				],
				[
					253,
					1,
					"left_delete",
					null,
					"AgAAAE8UAAAAAAAATxQAAAAAAAA8AAAAc3RkOjpvcHRpb25hbDxUPiBvdXQgPSBnZXQoc3RkOjpmb3J3YXJkPFJldHVybkZ1bmNUeXBlPihnKSk71hEAAAAAAADWEQAAAAAAABAAAAAgICAgICAgICAgICAgICAg",
					"AQAAAAAAAAABAAAAixQAAAAAAABPFAAAAAAAAAAAAAAAAPC/"
				],
				[
					255,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAC8UAAAAAAAALxQAAAAAAAAQAAAAICAgICAgICAgICAgICAgIA",
					"AQAAAAAAAAABAAAAPxQAAAAAAAA/FAAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": "iou"
					},
					"BAAAAOQTAAAAAAAA5RMAAAAAAAAAAAAA5RMAAAAAAADlEwAAAAAAAAYAAAByZXR1cm7lEwAAAAAAAOYTAAAAAAAAAAAAAOYTAAAAAAAA5xMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5BMAAAAAAADqEwAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					3,
					"left_delete",
					null,
					"AwAAAOYTAAAAAAAA5hMAAAAAAAABAAAAdeUTAAAAAAAA5RMAAAAAAAABAAAAb+QTAAAAAAAA5BMAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAA5xMAAAAAAADnEwAAAAAAAAAAAAAAAPC/"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": "out="
					},
					"BAAAAOQTAAAAAAAA5RMAAAAAAAAAAAAA5RMAAAAAAADmEwAAAAAAAAAAAADmEwAAAAAAAOcTAAAAAAAAAAAAAOcTAAAAAAAA6BMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5BMAAAAAAADkEwAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOcTAAAAAAAA6BMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xMAAAAAAADnEwAAAAAAAAAAAAAAAPC/"
				],
				[
					304,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAAgSAAAAAAAACxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFxIAAAAAAAAXEgAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "\nout"
					},
					"BQAAABoSAAAAAAAAGxIAAAAAAAAAAAAAGxIAAAAAAAAvEgAAAAAAAAAAAAAvEgAAAAAAADASAAAAAAAAAAAAADASAAAAAAAAMRIAAAAAAAAAAAAAMRIAAAAAAAAyEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGhIAAAAAAAAaEgAAAAAAAAAAAAAAAPC/"
				],
				[
					306,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADISAAAAAAAAMxIAAAAAAAAAAAAAMxIAAAAAAAA0EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMhIAAAAAAAAyEgAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": " P_"
					},
					"AwAAADQSAAAAAAAANRIAAAAAAAAAAAAANRIAAAAAAAA2EgAAAAAAAAAAAAA2EgAAAAAAADcSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBIAAAAAAAA0EgAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADcSAAAAAAAAORIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxIAAAAAAAA3EgAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					3,
					"left_delete",
					null,
					"AwAAADcSAAAAAAAANxIAAAAAAAABAAAAezYSAAAAAAAANhIAAAAAAAABAAAAXzUSAAAAAAAANRIAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAAOBIAAAAAAAA4EgAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADUSAAAAAAAANxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANRIAAAAAAAA1EgAAAAAAAAAAAAAAAPC/"
				],
				[
					312,
					1,
					"right_delete",
					null,
					"AQAAADcSAAAAAAAANxIAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAANxIAAAAAAAA3EgAAAAAAAAAAAAAAAPC/"
				],
				[
					313,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADcSAAAAAAAAOBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxIAAAAAAAA3EgAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAAgSAAAAAAAACBIAAAAAAAADAAAALy8g",
					"AQAAAAAAAAABAAAAGhIAAAAAAAAaEgAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					2,
					"left_delete",
					null,
					"AgAAABgSAAAAAAAAGBIAAAAAAAAdAAAAICAgICAgICAgICAgICAgICAgICBvdXQgPSB7fTsXEgAAAAAAABcSAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAANRIAAAAAAAAYEgAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAJcNAAAAAAAAmA0AAAAAAAAAAAAAmA0AAAAAAACcDQAAAAAAAAAAAACcDQAAAAAAAKANAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlw0AAAAAAACXDQAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"paste",
					null,
					"AQAAAKANAAAAAAAAxA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoA0AAAAAAACgDQAAAAAAAAAAAAAAAPC/"
				],
				[
					345,
					1,
					"left_delete",
					null,
					"AQAAAAESAAAAAAAAARIAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAAhIAAAAAAAACEgAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAESAAAAAAAAAhIAAAAAAAAAAAAAAhIAAAAAAAADEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARIAAAAAAAABEgAAAAAAAAAAAAAAAPC/"
				],
				[
					347,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAMSAAAAAAAABBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAxIAAAAAAAADEgAAAAAAAAAAAAAAAPC/"
				],
				[
					348,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAQSAAAAAAAABhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABBIAAAAAAAAEEgAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAYSAAAAAAAABxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhIAAAAAAAAGEgAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					2,
					"left_delete",
					null,
					"AgAAAAEUAAAAAAAAARQAAAAAAABMAAAACiAgICAgICAgICAgICAgICAgICAgb3V0ID0gc3RkOjpvcHRpb25hbDxUPigpOyAgLy8gcmV0dXJucyBhbiBlbXB0eSBvcHRpb25hbAAUAAAAAAAAABQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAATRQAAAAAAAABFAAAAAAAAAAAAAAAAPC/"
				],
				[
					368,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIQGAAAAAAAAhQYAAAAAAAAAAAAAhQYAAAAAAACJBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAYAAAAAAACEBgAAAAAAAAAAAAAAAPC/"
				],
				[
					369,
					1,
					"paste",
					null,
					"AQAAAIkGAAAAAAAAlwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQYAAAAAAACJBgAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					1,
					"insert",
					{
						"characters": " _tmp_g"
					},
					"BwAAAJcGAAAAAAAAmAYAAAAAAAAAAAAAmAYAAAAAAACZBgAAAAAAAAAAAACZBgAAAAAAAJoGAAAAAAAAAAAAAJoGAAAAAAAAmwYAAAAAAAAAAAAAmwYAAAAAAACcBgAAAAAAAAAAAACcBgAAAAAAAJ0GAAAAAAAAAAAAAJ0GAAAAAAAAngYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwYAAAAAAACXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJ4GAAAAAAAAnwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngYAAAAAAACeBgAAAAAAAAAAAAAAAPC/"
				],
				[
					387,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAI4RAAAAAAAAjxEAAAAAAAAAAAAAjxEAAAAAAACTEQAAAAAAAAAAAACTEQAAAAAAAJcRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjhEAAAAAAACOEQAAAAAAAAAAAAAAAPC/"
				],
				[
					388,
					1,
					"paste",
					null,
					"AQAAAJcRAAAAAAAAnREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlxEAAAAAAACXEQAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJ0RAAAAAAAAnhEAAAAAAAAAAAAAnhEAAAAAAACfEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnREAAAAAAACdEQAAAAAAAAAAAAAAAPC/"
				],
				[
					390,
					1,
					"insert",
					{
						"characters": " g;"
					},
					"AwAAAJ8RAAAAAAAAoBEAAAAAAAAAAAAAoBEAAAAAAAChEQAAAAAAAAAAAAChEQAAAAAAAKIRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnxEAAAAAAACfEQAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"paste",
					null,
					"AgAAAG8SAAAAAAAAdRIAAAAAAAAAAAAAdRIAAAAAAAB1EgAAAAAAAAEAAABn",
					"AQAAAAAAAAABAAAAbxIAAAAAAABwEgAAAAAAAAAAAAAAAPC/"
				],
				[
					407,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABwFgAAI2lmbmRlZiBDTElFTlRDT05UUk9MTEVSX0gKI2RlZmluZSBDTElFTlRDT05UUk9MTEVSX0gKI2luY2x1ZGUgPHV0aWxpdHk+CiNpbmNsdWRlIDx2ZWN0b3I+CiNwcmFnbWEgb25jZQoKLyoKICAgIFRoaXMgZmlsZSBpcyBtZWFudCB0byBjcmVhdGUgYSBtb25hZC9pbnRlcmZhY2UgdGhhdCB3cmFwcyBhIGxvdCBvZiBjb21tb24KICAgIGxvZ2ljIGJldHdlZW4gYSBzZXJ2ZXIvbWFzdGVyIGFuZCBjbGllbnQvYWdlbnQuIFRoZSBtYWluIGFzc3VtcHRpb24KICAgIGlzIHRoYXQgdGhlIGNsaWVudCBpcyBzbG93IChPKDEwMG1zKSBvciBoaWdoZXIpLCBoYXMgYW4gaW5pdGlhbGl6YXRpb24KICAgIHBoYXNlIGFuZCBkb2VzIG5vdCBzZW5kIGFueSBjb21tYW5kcyB0byB0aGUgbWFzdGVyOiBpdCBvbmx5IHNlbmRzIHJlc3BvbnNlcy4KCiAgICBFeGFtcGxlOiBhIHByZXNzdXJlIHRyYW5zZHVjZXIgd2hpY2ggaGFzIGEgc2V0dXAgcGhhc2UgdGhlbiBhbGwgaXQgd2lsbAogICAgZXZlciBkbyBpcyB0byByZXBseSB3aXRoIG1lc3NhZ2VzIChhZnRlciB0aGUgc2VydmVyIGFzayBmb3IgaXQpIHdpdGggdGhlCiAgICBsYXRlc3QgcHJlc3N1cmUgdHJhbnNkdWNlciwgYW5kIG9jY2FzaW9uYWxseSBpZiB0aGUgc2VydmVyIGRlc2lyZXMKICAgIHRvIGNoYW5nZSBpdHMgc2V0dXAuCgogICAgRm9yIGZhc3QgYW5kIGNvbXBsaWNhdGVkIHNldHVwcyAoc2V2ZXJhbCBzdGVwcywgZmVlZGJhY2sgaXMgbmVlZGVkIG9yCiAgICBmYXN0ZXIgYWNxdWlzaXRpb24gdGltZXMpIHdyaXRlIGEgc3BlY2lhbGl6ZWQgY29kZQoqLwoKLy8gQyBTVEQgaW5jbHVkZXMKLy8gQyAzcmQgcGFydHkgaW5jbHVkZXMKLy8gQysrIFNURCBpbmNsdWRlcwojaW5jbHVkZSA8ZnVuY3Rpb25hbD4KI2luY2x1ZGUgPG1lbW9yeT4KI2luY2x1ZGUgPG9wdGlvbmFsPgojaW5jbHVkZSA8c3RyaW5nPgojaW5jbHVkZSA8bXV0ZXg+CiNpbmNsdWRlIDxmdXR1cmU+CiNpbmNsdWRlIDx0aHJlYWQ+CgovLyBDKysgM3JkIHBhcnR5IGluY2x1ZGVzCiNpbmNsdWRlIDxzcGRsb2cvc3BkbG9nLmg+CiNpbmNsdWRlIDxyZWFkZXJ3cml0ZXJxdWV1ZS5oPgovLyBteSBpbmNsdWRlcwoKbmFtZXNwYWNlIFNCQ1F1ZWVucyB7Cgp0ZW1wbGF0ZTx0eXBlbmFtZSBQb3J0LCB0eXBlbmFtZSBUPgpjbGFzcyBDbGllbnRDb250cm9sbGVyIHsKIHB1YmxpYzoKICAgIHVzaW5nIHJldHVybl90eXBlID0gVDsKICAgIHVzaW5nIHF1ZXVlX3R5cGUgPSBtb29keWNhbWVsOjpSZWFkZXJXcml0ZXJRdWV1ZTxUPjsKICAgIC8vIEluaXRpYWxpemF0aW9uIGZ1bmN0aW9uIHR5cGUgdG8gb3BlbiB0aGUgcG9ydAogICAgdXNpbmcgQ29udHJvbEZ1bmNUeXBlID0gc3RkOjpmdW5jdGlvbjxib29sKFBvcnQmKT47CiAgICAvLyBSZXR1cm4gZnVuY3Rpb24gdHlwZSB0byByZXRyaWV2ZSB0aGUgZGF0YSBmcm9tIHRoZSBwb3J0LgogICAgLy8gUmV0dXJuIG11c3QgYmUgb3B0aW9uYWwgb2YgUmV0dXJuVHlwZQogICAgdXNpbmcgUmV0dXJuRnVuY1R5cGUgPSBzdGQ6OmZ1bmN0aW9uPHN0ZDo6b3B0aW9uYWw8VD4oUG9ydCYpPjsKCiBwcml2YXRlOgogICAgUG9ydCBfcG9ydDsKICAgIHN0ZDo6c3RyaW5nIF9uYW1lOwogICAgQ29udHJvbEZ1bmNUeXBlIF9pbml0X2Z1bmM7CiAgICBDb250cm9sRnVuY1R5cGUgX2Nsb3NlX2Z1bmM7CiAgICBSZXR1cm5GdW5jVHlwZSBfdG1wX2c7CgogICAgcXVldWVfdHlwZSBfcTsKICAgIG11dGFibGUgc3RkOjptdXRleCBfcG9ydF9tdXRleDsKCiBwdWJsaWM6CiAgICBleHBsaWNpdCBDbGllbnRDb250cm9sbGVyKGNvbnN0IHN0ZDo6c3RyaW5nJiBuYW1lKSA6IF9uYW1lKG5hbWUpIHt9CiAgICBDbGllbnRDb250cm9sbGVyKGNvbnN0IHN0ZDo6c3RyaW5nJiBuYW1lLCBDb250cm9sRnVuY1R5cGUmJiBpbml0LAogICAgICAgIENvbnRyb2xGdW5jVHlwZSYmIGNsb3NlKQogICAgICAgIDogX25hbWUobmFtZSksIF9pbml0X2Z1bmMoaW5pdCksIF9jbG9zZV9mdW5jKGNsb3NlKSwgX3EoMTAwKSB7fQoKICAgIC8vIE1vdmluZyBhbGxvd2VkCiAgICBDbGllbnRDb250cm9sbGVyKENsaWVudENvbnRyb2xsZXImJikgPSBkZWZhdWx0OwogICAgLy8gTm8gY29weWluZwogICAgQ2xpZW50Q29udHJvbGxlcihjb25zdCBDbGllbnRDb250cm9sbGVyJikgPSBkZWxldGU7CgogICAgfkNsaWVudENvbnRyb2xsZXIoKSB7CiAgICAgICAgc3RkOjpzY29wZWRfbG9jayBndWFyZChfcG9ydF9tdXRleCk7CiAgICAgICAgX2Nsb3NlX2Z1bmMoX3BvcnQpOwogICAgfQoKICAgIC8vIFNldHMgdGhlIGluaXQgYW5kIGNsb3NlIGZ1bmN0aW9uLgogICAgdm9pZCBidWlsZChDb250cm9sRnVuY1R5cGUmJiBpbml0LCBDb250cm9sRnVuY1R5cGUmJiBjbG9zZSkgbm9leGNlcHQgewogICAgICAgIF9pbml0X2Z1bmMgPSBpbml0OwogICAgICAgIF9jbG9zZV9mdW5jID0gY2xvc2U7CiAgICB9CgogICAgLy8gQnVpbGRzIGFuZCBpbml0aWFsaXplcyB0aGUgcG9ydAogICAgdm9pZCBpbml0KENvbnRyb2xGdW5jVHlwZSYmIGluaXQsIENvbnRyb2xGdW5jVHlwZSYmIGNsb3NlKSBub2V4Y2VwdCB7CiAgICAgICAgX2luaXRfZnVuYyA9IGluaXQ7CiAgICAgICAgX2Nsb3NlX2Z1bmMgPSBjbG9zZTsKCiAgICAgICAgaWYgKCFfcG9ydCkgewogICAgICAgICAgICBib29sIHN1Y2Nlc3MgPSBfaW5pdF9mdW5jKF9wb3J0KTsKCiAgICAgICAgICAgIGlmICghc3VjY2VzcykgewogICAgICAgICAgICAgICAgc3BkbG9nOjplcnJvcigiRmFpbGVkIHRvIG9wZW4gcG9ydCB1bmRlciBjb250cm9sbGVyIG5hbWUgezB9IiwKICAgICAgICAgICAgICAgICAgICBfbmFtZSk7CgogICAgICAgICAgICAgICAgLy8gU29tZXRpbWVzIHRoZSBsb2dpYyBpbnNpZGUgaW5pdCB3b3VsZCBub3QgY2xvc2UgdGhlCiAgICAgICAgICAgICAgICAvLyBwb3J0LCBzbyB3ZSBjbG9zZSBpdCBoZXJlLgogICAgICAgICAgICAgICAgX2Nsb3NlX2Z1bmMoX3BvcnQpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIC8vIEZvcmNlcyB0byBjbG9zZS4KICAgIC8vIFRoZSBkZWNvbnN0cnVjdG9yIGFsc28gY2FsbHMgdGhpcyBmdW5jdGlvbgogICAgdm9pZCBjbG9zZSgpIG5vZXhjZXB0IHsKICAgICAgICBzdGQ6OnNjb3BlZF9sb2NrIGd1YXJkKF9wb3J0X211dGV4KTsKICAgICAgICBfY2xvc2VfZnVuYyhfcG9ydCk7CiAgICB9CgogICAgLy8gSG9sZHMgdGhlIGVudGlyZSBsb2dpYyB0byBjb25uZWN0IHRvIHRoZSBwb3J0IGFuZCByZXRyaWV2ZSB0aGUgZGF0YS4KICAgIC8vIEEgZm9ybSBvZiAibGF6eSBldmFsdWF0aW9uIiBsZWF2aW5nIHRoZSBjb25uZWN0aW9uIHRvIHRoZSBwb3J0CiAgICAvLyB1bnRpbCByZXF1aXJlZC4gVGhlIGNvZGUgcmV0dXJucyBhbiBvcHRpb25hbCB0byBkZWFsIGluIHRoZSBjYXNlIHRoZQogICAgLy8gcG9ydCB3YXMgbm90IG9wZW4gb3IgYW4gZXJyb3Igb2NjdXIuCiAgICBzdGQ6Om9wdGlvbmFsPFQ+IGdldChSZXR1cm5GdW5jVHlwZSYmIGcpIG5vZXhjZXB0IHsKICAgICAgICBzdGQ6OnNjb3BlZF9sb2NrIGd1YXJkKF9wb3J0X211dGV4KTsKICAgICAgICBpZiAoX3BvcnQpIHsKICAgICAgICAgICAgcmV0dXJuIGcoX3BvcnQpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGJvb2wgc3VjY2VzcyA9IF9pbml0X2Z1bmMoX3BvcnQpOwoKICAgICAgICAgICAgaWYgKCFzdWNjZXNzKSB7CiAgICAgICAgICAgICAgICBzcGRsb2c6OmVycm9yKCJGYWlsZWQgdG8gb3BlbiBwb3J0IHVuZGVyIGNvbnRyb2xsZXIgbmFtZSB7MH0iLAogICAgICAgICAgICAgICAgICAgIF9uYW1lKTsKCiAgICAgICAgICAgICAgICAvLyBTb21ldGltZXMgdGhlIGxvZ2ljIGluc2lkZSBpbml0IHdvdWxkIG5vdCBjbG9zZSB0aGUKICAgICAgICAgICAgICAgIC8vIHBvcnQsIHNvIHdlIGNsb3NlIGl0IGhlcmUuCiAgICAgICAgICAgICAgICBfY2xvc2VfZnVuYyhfcG9ydCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBzdGQ6Om9wdGlvbmFsPFQ+KCk7ICAvLyByZXR1cm5zIGFuIGVtcHR5IG9wdGlvbmFsCiAgICAgICAgfQogICAgfQoKICAgIC8vIEhvbGRzIHRoZSBlbnRpcmUgbG9naWMgdG8gY29ubmVjdCB0byB0aGUgcG9ydCBhbmQgcmV0cmlldmUgdGhlIGRhdGEuCiAgICAvLyBBIGZvcm0gb2YgImxhenkgZXZhbHVhdGlvbiIgbGVhdmluZyB0aGUgY29ubmVjdGlvbiB0byB0aGUgcG9ydAogICAgLy8gdW50aWwgcmVxdWlyZWQuIFRoZSBjb2RlIHJldHVybnMgYW4gb3B0aW9uYWwgdG8gZGVhbCBpbiB0aGUgY2FzZSB0aGUKICAgIC8vIHBvcnQgd2FzIG5vdCBvcGVuIG9yIGFuIGVycm9yIG9jY3VyLgogICAgc3RkOjpvcHRpb25hbDxUPiBvcGVyYXRvcigpKFJldHVybkZ1bmNUeXBlJiYgZykgbm9leGNlcHQgewogICAgICAgIHJldHVybiBnZXQoc3RkOjpmb3J3YXJkPFJldHVybkZ1bmNUeXBlPihnKSk7CiAgICB9CgogICAgdm9pZCBhc3luY19nZXQoUmV0dXJuRnVuY1R5cGUmJiBnKSBub2V4Y2VwdCB7CiAgICAgICAgX3RtcF9nID0gZzsKICAgICAgICBzdGQ6OnRocmVhZCBhc3luY190YXNrKAogICAgICAgICAgICBbJl0oKSB7CiAgICAgICAgICAgICAgICBzdGQ6OnNjb3BlZF9sb2NrIGd1YXJkKF9wb3J0X211dGV4KTsKICAgICAgICAgICAgICAgIHN0ZDo6b3B0aW9uYWw8VD4gb3V0ID0ge307CgogICAgICAgICAgICAgICAgaWYgKF9wb3J0KSB7CiAgICAgICAgICAgICAgICAgICAgb3V0ID0gX3RtcF9nKF9wb3J0KTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgYm9vbCBzdWNjZXNzID0gX2luaXRfZnVuYyhfcG9ydCk7CgogICAgICAgICAgICAgICAgICAgIGlmICghc3VjY2VzcykgewogICAgICAgICAgICAgICAgICAgICAgICBzcGRsb2c6OmVycm9yKCJGYWlsZWQgdG8gb3BlbiBwb3J0IHVuZGVyIGNvbnRyb2xsZXIgbmFtZSB7MH0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgX25hbWUpOwoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gU29tZXRpbWVzIHRoZSBsb2dpYyBpbnNpZGUgaW5pdCB3b3VsZCBub3QgY2xvc2UgdGhlCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHBvcnQsIHNvIHdlIGNsb3NlIGl0IGhlcmUuCiAgICAgICAgICAgICAgICAgICAgICAgIF9jbG9zZV9mdW5jKF9wb3J0KTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKG91dC5oYXNfdmFsdWUoKSkgewogICAgICAgICAgICAgICAgICAgIF9xLmVucXVldWUob3V0LnZhbHVlKCkpOwogICAgICAgICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICBhc3luY190YXNrLmRldGFjaCgpOwogICAgfQoKICAgIHN0ZDo6dmVjdG9yPFQ+IGFzeW5jX2dldF92YWx1ZXMoKSBub2V4Y2VwdCB7CiAgICAgICAgYXV0byBzaXplID0gX3Euc2l6ZV9hcHByb3goKTsKCiAgICAgICAgaWYgKHNpemUgPT0gMCkgewogICAgICAgICAgICByZXR1cm4ge307CiAgICAgICAgfQoKICAgICAgICBUIG91dF9zaW5nbGU7CiAgICAgICAgc3RkOjp2ZWN0b3I8VD4gb3V0OwoKICAgICAgICBmb3IgKHN0ZDo6c2l6ZV90IGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7CiAgICAgICAgICAgIF9xLnRyeV9kZXF1ZXVlKG91dF9zaW5nbGUpOwogICAgICAgICAgICBvdXQucHVzaF9iYWNrKG91dF9zaW5nbGUpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIG91dDsKICAgIH0KfTsKCn0gIC8vIG5hbWVzcGFjZSBTQkNRdWVlbnMKCiNlbmRpZgoAAAAAAAAAAHAWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAghAAAAAAAACCEAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "include/sbcqueens-gui/caen_helper.hpp",
			"settings":
			{
				"buffer_size": 16649,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "include/sbcqueens-gui/file_helpers.hpp",
			"settings":
			{
				"buffer_size": 7034,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAACYVAAAAAAAAJxUAAAAAAAAAAAAAJxUAAAAAAAArFQAAAAAAAAAAAAArFQAAAAAAACwVAAAAAAAAAAAAACwVAAAAAAAALRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJhUAAAAAAAAmFQAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAC0VAAAAAAAALxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALRUAAAAAAAAtFQAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "file"
					},
					"BAAAAC4VAAAAAAAALxUAAAAAAAAAAAAALxUAAAAAAAAwFQAAAAAAAAAAAAAwFQAAAAAAADEVAAAAAAAAAAAAADEVAAAAAAAAMhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALhUAAAAAAAAuFQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAC4VAAAAAAAALxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALhUAAAAAAAAuFQAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADQVAAAAAAAANRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBUAAAAAAAA0FQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADUVAAAAAAAANxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANRUAAAAAAAA1FQAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAADYVAAAAAAAANxUAAAAAAAAAAAAANxUAAAAAAAA7FQAAAAAAAAAAAAA7FQAAAAAAADwVAAAAAAAAAAAAADwVAAAAAAAAQBUAAAAAAAAAAAAANxUAAAAAAAA3FQAAAAAAAAQAAAAgICAgNxUAAAAAAAA/FQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANhUAAAAAAAA2FQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "return;"
					},
					"BwAAAD8VAAAAAAAAQBUAAAAAAAAAAAAAQBUAAAAAAABBFQAAAAAAAAAAAABBFQAAAAAAAEIVAAAAAAAAAAAAAEIVAAAAAAAAQxUAAAAAAAAAAAAAQxUAAAAAAABEFQAAAAAAAAAAAABEFQAAAAAAAEUVAAAAAAAAAAAAAEUVAAAAAAAARhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPxUAAAAAAAA/FQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEwVAAAAAAAATRUAAAAAAAAAAAAATRUAAAAAAABRFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATBUAAAAAAABMFQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAE0VAAAAAAAATRUAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAURUAAAAAAABRFQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATRUAAAAAAABNFQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Build GUI Debug",
	"build_system_choices":
	[
		[
			[
				[
					"Build GUI",
					""
				],
				[
					"Build GUI Debug",
					""
				],
				[
					"Build GUI Windows",
					""
				]
			],
			[
				"Build GUI Debug",
				""
			]
		],
		[
			[
				[
					"Build GUI",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Build GUI",
				""
			]
		],
		[
			[
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					""
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Traditional"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Script Builder"
				],
				[
					"Packages/User/Latex-build.sublime-build",
					""
				]
			],
			[
				"Packages/LaTeXTools/LaTeX.sublime-build",
				"PdfLaTeX"
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					""
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Traditional"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Script Builder"
				],
				[
					"Packages/User/Latex-build.sublime-build",
					""
				]
			],
			[
				"Packages/LaTeXTools/LaTeX.sublime-build",
				"PdfLaTeX"
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control:in\\",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: INS",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"upda",
				"Package Control: Upgrade Package"
			],
			[
				"Insta",
				"Package Control: Install Package"
			],
			[
				"Install Package",
				"Package Control: Install Package"
			],
			[
				"Install",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 175.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/all",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/build",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/calibration",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/cmake",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/sbcqueens-gui",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/sbcqueens-gui/hardware_helpers",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/src",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/standalone"
	],
	"file_history":
	[
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/test/CMakeLists.txt",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/standalone/CMakeLists.txt",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/CMakeLists.txt",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/cmake/Dependencies.cmake",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/sipm_control_gui.sublime-project",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/all/CMakeLists.txt",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/src/GUI/SiPMControlWindow.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/file_helpers.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/SlowDAQInterface.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/indicators.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/src/GUI/TeensyTabs.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/src/GUI/ControlWindow.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/GUI/SiPMControlWindow.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/CAENDigitizerInterface.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/HardwareHelpers/ClientController.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/src/caen_helper.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/GUIManager.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/src/armadillo_helpers.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/TeensyControllerInterface.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/src/HardwareHelpers/Calibration.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/HardwareHelpers/Calibration.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/CAENDigitizerInterface.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/src/GUI/IndicatorWindow.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/GUI/IndicatorWindow.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/implot_helpers.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/deps/implot/implot_demo.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/gui_setup.toml",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/armadillo_helpers.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/serial_helper.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/Preferences.sublime-settings",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/main.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/caen_helper.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/GUI/CAENTabs.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/src/serial_helper.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/cmake/CompilerWarnings.cmake",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/imgui_helpers.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/calibration/CalibrationCalculations.py",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/calibration/calibration_calculations.py",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/TeensyControllerInterface.cpp",
		"/home/sbc-queens-linux/iv_cmd.py",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/src/GUI/CAENTabs.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/GUI/ControlWindow.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/timing_events.hpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/build/gui_setup.toml",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/deps/implot/implot.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/deps/imgui/imgui_demo.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/deps/imgui/imgui.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/GUIManager.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/implot_helpers.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/TeensyControllerInterface.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/OtherDevicesInterface.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/GUI/ControlWindow.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/imgui_helpers.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/GUI/IndicatorWindow.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/GUI/TeensyTabs.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/serial_helper.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/CAENDigitizerInterface.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/file_helpers.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/rendering_wrappers/glfw_vulkan_wrapper.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/indicators.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/caen_helper.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/timing_events.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/Teensy41-Controller-Board/include/SBCQueensTeensyBasics.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/Teensy41-Controller-Board/src/main.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/Teensy41-Controller-Board/include/SBCQueensTiming.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/Teensy41-Controller-Board/include/Drivers/SBCQueensRTDBoard.h",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/Teensy41-Controller-Board/src/SBCQueensTeensyHardware.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/Teensy41-Controller-Board/src/SBCQueensTeensyCommunications.cpp",
		"/home/sbc-queens-linux/SIPMSPulseProcessing/base/statistics.py",
		"/home/sbc-queens-linux/SIPMSPulseProcessing/__init__.py",
		"/home/sbc-queens-linux/SIPMSPulseProcessing/algorithms/sipm_nnls.py",
		"/home/sbc-queens-linux/SIPMSPulseProcessing/generate_mc_pulses.py",
		"/home/sbc-queens-linux/SIPMSPulseProcessing/mc/sipm_pulse_mc.py",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/GUIManager.cpp",
		"/home/sbc-queens-linux/SBC-SIPM-Testing-Software/.gitignore",
		"/X/OneDrive - Queen's University/Research/Research - SIPMs - Queens/Project - SiPM Cooler v2/Software/SiPMControlGUI/GUIManager.cpp",
		"/X/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/src/PICO250EventAction.cc",
		"/X/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/muon.mac",
		"/X/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/src/muon_construction_src/assemblies/MuonConstructionPICO500.cc",
		"/X/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/include/muon_construction_include/assemblies/MuonConstructionPICO500.hh",
		"/X/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/.gitignore",
		"/X/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/CMakeLists.txt",
		"/X/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/include/PICO250DetectorConstruction.hh",
		"/X/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/src/PICO250DetectorConstruction.cc",
		"/X/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/compile_commands.json",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/Simulations/PMTs Hardware Simulation/PICO500_hardware_simulation.cxx",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/build/experiment_macs/material-df2000ma.mac",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/Simulations/PMTs Hardware Simulation/PICO500_hardware_helper.hh",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/Simulations/PMTs Hardware Simulation/PICO500_hardware_helper.cxx",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/Muon-Veto-Analysis/darknoise.cxx",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - SIPMs - Queens/Project - SiPM Cooler v2/Software/SiPM_Control_GUI/test/async_file_saver_test.cpp",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - SIPMs - Queens/Project - SiPM Cooler v2/Software/SiPM_Control_GUI/Setting Up SublimeText for C++.txt",
		"/C/Program Files/CAEN/Comm/include/CAENComm.h",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - Other - PhD Progress Report/PhDProgress.tex",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/PICO250.cc",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/src/PICO250StackingAction.cc",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/Muon-Veto-Analysis/extract_99_contour.cxx",
		"/C/Program Files/CAEN/Comm/Readme.txt",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - SIPMs - Queens/Photos/2021-11-26 Single pe histo/F1--driver_2V59_sipm_54V_5degC_area_under_pulse_histo--00000.txt",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - SIPMs - Queens/Photos/2021-11-26 Single pe histo/F1--driver_2V63_sipm_54V_5degC_area_under_pulse_histo--00000.txt",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/src/PICO250DetectorConstruction.cc",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/include/muon_construction_include/assemblies/MuonConstructionPICO500.hh",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/include/muon_veto_include/MuonVetoPMTModule.hh",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/src/muon_veto_src/MuonVetoPMTModule.cc",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/Muon-Veto-Analysis/plot_radius_contours.cxx",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/Muon-Veto-Analysis/plot_99_contours.cxx",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/Muon-Veto-Analysis/calculate_nhit_vs_time.cxx",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/src/muon_veto_src/OpNovicePhysicsList.cc",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/src/muon_construction_src/assemblies/MuonConstructionPICO500.cc",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/Simulations/PMTs Hardware Simulation/PICO500_electrical_simulation.cxx",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/tmp_build/muon.mac",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/src/muon_veto_src/PhysicsListWithSpallation.cc",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/Simulations/PMTs Hardware Simulation/Calculate_Nhit_vs_time.hh",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/Simulations/PMTs Hardware Simulation/PICO500_electrical_simulation.cpp",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/Calculations/Default Dataset.csv",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/Simulations/PMTs Hardware Simulation/README.txt",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/init_vis.mac",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/build/muon.mac",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/vis.mac",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/build/init_vis.mac",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/src/muon_veto_src/OpPhysicsMessenger.cc",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/src/muon_veto_src/OpPhysics.cc",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/include/muon_veto_include/OpPhysicsMessenger.hh",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/include/muon_veto_include/OpPhysics.hh",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/src/muon_veto_src/OpPhysicsMessenger.hh",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/src/muon_veto_src/OpPhysics.hh",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/include/muon_veto_include/PhysicsListWithSPallation.hh",
		"/C/Users/StaticPopcorn/OneDrive - Queen's University/Research/Research - PICO500 - Muon veto simulations/PICO 500 Muon Veto Code/src/PICO250SteppingAction.cc"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 122.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"ResetCaen",
			"extract_event",
			"rtd_scale_axis",
			"armadillo",
			"Sipmanalysis",
			"armadillo",
			"Armadillo",
			"armadillo",
			"_sipm_volt_sys",
			"SiPMVoltageMeasure",
			"Port",
			"port",
			"Port",
			"port",
			"Port",
			"port",
			"Port",
			"port",
			"Port",
			"sipm_voltage_system_update",
			"y_values",
			"x_values",
			"osc_event",
			"vbe_analysis",
			"SiPMVoltageSystem",
			"_plotSender",
			"_indicatorSender",
			"_sd",
			"TeensyData",
			"_indicatorReceiver",
			"PeltierPidRTD",
			"TeensyCommands::SetPPIDRTD",
			"_saveinfoFile",
			"nEXOSiPMFunction",
			"change_state",
			"Init",
			"VBRState",
			"attempt_connection",
			"_voltagesFile",
			"Closing",
			"SiPMVoltageSysVoltage",
			"SiPMVoltageSystem",
			"close_caen",
			"rdm_extract_for_gui",
			"extract_for_gui_nb",
			"process_data_for_gui",
			"TriggeredWaveforms",
			"spe_analysis",
			"Saved",
			"TriggeredWaveforms",
			"SavedWaveforms",
			"closing_mode",
			"closing_state",
			"async_save",
			";\n",
			"process_data_for_gui",
			"statistics_mode",
			"retrieve_data",
			"close_caen",
			"MultiPlotReceiver",
			"process_data_for_gui",
			"PELTIER",
			"retrieve_pids",
			"Hello",
			"send_initial_config",
			"retrieve_pressures",
			"calculate_trigger_frequency",
			"port",
			"ChangeWaitTime",
			"DMM_CAL_PARS",
			"CheckBox",
			"SoftwareTrigger",
			"60V",
			"b",
			"port.write",
			"flush",
			"get_current_time_epoch",
			"scatter",
			"ImPlotAxisFlags",
			"x_values",
			"\\n",
			", \"\"",
			"send_msg",
			"_pfeiffer_file",
			"state_of_everything",
			"slider float",
			"ImAxis",
			"ImPlotDragToolFlags",
			"const",
			"TeensyControlFac",
			"Text",
			"guiQueueOut",
			"TeensyControllerState",
			"OtherInQueue",
			"TeensyInQueue",
			"TeensyQueueInType",
			"TeensyControlFac",
			"SlowDAQControlFac",
			"TeensyControlFac",
			"CAENControlFac",
			"c_",
			"> 0",
			"InRTDOnlyMode",
			"send_teensy_cmd",
			"retrieve_pids",
			"send_teensy_cmd",
			"_init_time",
			"connect_bt",
			"_pulseFile",
			"disconnect",
			"MultiPlotReceiver",
			"GeneralIndicatorReceiver",
			"TeensyIndicatorSender",
			"GeneralIndicatorReceiver",
			"TeensyIndicatorSender",
			"BooleanIndicator",
			"TeensyControlFac",
			"tgui_state",
			"GET_RTDS",
			"float",
			"_RTDsFile",
			"???",
			"int_charges",
			"caen_port",
			"PortNum",
			"caen_port",
			"Port",
			"1."
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			" ",
			"\\n/MuonVeto/Gun/AddEnergyPhiPoint ",
			"e",
			"hh>",
			"<G",
			"static const",
			"statis const"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "gui_setup.toml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1699,
						"regions":
						{
						},
						"selection":
						[
							[
								1659,
								1659
							]
						],
						"settings":
						{
							"lsp_uri": "file:///home/sbc-queens-linux/SBC-SIPM-Testing-Software/gui_setup.toml",
							"syntax": "Packages/TOML/TOML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 194.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "include/sbcqueens-gui/hardware_helpers/CAENDigitizerInterface.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 44358,
						"regions":
						{
						},
						"selection":
						[
							[
								36630,
								36630
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/sbcqueens-gui/hardware_helpers/CAENDigitizerInterface.hpp",
							"show_definitions": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 15620.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5078,
						"regions":
						{
						},
						"selection":
						[
							[
								4381,
								4381
							]
						],
						"settings":
						{
							"lsp_uri": "file:///home/sbc-queens-linux/SBC-SIPM-Testing-Software/CMakeLists.txt",
							"syntax": "Packages/CMake/CMake.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 300.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "include/sbcqueens-gui/hardware_helpers/GUIManager.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16753,
						"regions":
						{
						},
						"selection":
						[
							[
								14165,
								14165
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/sbcqueens-gui/hardware_helpers/GUIManager.hpp",
							"show_definitions": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6001.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "include/sbcqueens-gui/hardware_helpers/TeensyControllerInterface.hpp",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29331,
						"regions":
						{
						},
						"selection":
						[
							[
								19474,
								19474
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/sbcqueens-gui/hardware_helpers/TeensyControllerInterface.hpp",
							"show_definitions": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10060.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 5,
					"file": "test/source/gui_test.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1525,
						"regions":
						{
						},
						"selection":
						[
							[
								1443,
								1459
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/sbc-queens-linux/SBC-SIPM-Testing-Software/test/source/gui_test.cpp",
							"show_definitions": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 96.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "include/sbcqueens-gui/hardware_helpers/ClientController.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5744,
						"regions":
						{
						},
						"selection":
						[
							[
								4226,
								4226
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/sbcqueens-gui/hardware_helpers/ClientController.hpp",
							"show_definitions": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1946.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "include/sbcqueens-gui/caen_helper.hpp",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16649,
						"regions":
						{
						},
						"selection":
						[
							[
								9852,
								9852
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/sbcqueens-gui/caen_helper.hpp",
							"show_definitions": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4512.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "include/sbcqueens-gui/file_helpers.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7034,
						"regions":
						{
						},
						"selection":
						[
							[
								5453,
								5453
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/sbc-queens-linux/SBC-SIPM-Testing-Software/include/sbcqueens-gui/file_helpers.hpp",
							"show_definitions": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2976.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 48.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 174.0
	},
	"output.diagnostics":
	{
		"height": 144.0
	},
	"output.exec":
	{
		"height": 223.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.hex_viewer_inspector":
	{
		"height": 138.0
	},
	"output.language servers":
	{
		"height": 0.0
	},
	"output.latextools":
	{
		"height": 138.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Build GUI Debug no Vulkan",
	"project": "sipm_control_gui.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 288.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
